<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>SQL.Portfolio.io</title>

    <link rel="stylesheet" href="CSS/STYLE.CSS" />
    <link rel="stylesheet" href="CSS/PERFECT_.CSS" />
    <link rel="stylesheet" title="Default" href="CSS/SUNBURST.CSS" />
    <link rel="alternate stylesheet" title="Atelier 11 Y Dark" href="./css/a11y-dark.css" />
    <link rel="alternate stylesheet" title="Atelier 11 Y Light" href="./css/a11y-light.css" />
    <link rel="alternate stylesheet" title="Atelier Agate" href="./css/agate.css" />
    <link rel="alternate stylesheet" title="Atelier An Old Hope" href="./css/an-old-hope.css" />
    <link rel="alternate stylesheet" title="AtelierAndroid Studio" href="./css/androidstudio.css" />
    <link rel="alternate stylesheet" title="AtelierArduino Light" href="./css/arduino-light.css" />
    <link rel="alternate stylesheet" title="AtelierAtelier Arta" href="./css/arta.css" />
    <link rel="alternate stylesheet" title="AtelierAtelier Ascetic" href="./css/ascetic.css" />
    <link rel="alternate stylesheet" title="Atelier Cave Dark" href="./css/atelier-cave-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Cave Light" href="./css/atelier-cave-light.css" />
    <link rel="alternate stylesheet" title="Atelier Dune Dark" href="./css/atelier-dune-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Dune Light" href="./css/atelier-dune-light.css" />
    <link rel="alternate stylesheet" title="Atelier Estuary Dark" href="./css/atelier-estuary-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Estuary Light" href="./css/atelier-estuary-light.css" />
    <link rel="alternate stylesheet" title="Atelier Forest Dark" href="./css/atelier-forest-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Forest Light" href="./css/atelier-forest-light.css" />
    <link rel="alternate stylesheet" title="Atelier Heath Dark" href="./css/atelier-heath-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Heath Light" href="./css/atelier-heath-light.css" />
    <link rel="alternate stylesheet" title="Atelier Lakeside Dark" href="./css/atelier-lakeside-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Lakeside Light" href="./css/atelier-lakeside-light.css" />
    <link rel="alternate stylesheet" title="Atelier Plateau Dark" href="./css/atelier-plateau-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Plateau Light" href="./css/atelier-plateau-light.css" />
    <link rel="alternate stylesheet" title="Atelier Savanna Dark" href="./css/atelier-savanna-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Savanna Light" href="./css/atelier-savanna-light.css" />
    <link rel="alternate stylesheet" title="Atelier Seaside Dark" href="./css/atelier-seaside-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Seaside Light" href="./css/atelier-seaside-light.css" />
    <link rel="alternate stylesheet" title="Atelier Sulphurpool Dark" href="./css/atelier-sulphurpool-dark.css" />
    <link rel="alternate stylesheet" title="Atelier Sulphurpool Light" href="./css/atelier-sulphurpool-light.css" />
    <link rel="alternate stylesheet" title="Atom One Dark Reasonable" href="./css/atom-one-dark-reasonable.css" />
    <link rel="alternate stylesheet" title="An AlternativeAtom One Dark" href="./css/atom-one-dark.css" />
    <link rel="alternate stylesheet" title="An Alternative Atom One Light" href="./css/atom-one-light.css" />
    <link rel="alternate stylesheet" title="Brown Paper" href="./css/brown-paper.css" />
    <link rel="alternate stylesheet" title="Codepen Embed" href="./css/codepen-embed.css" />
    <link rel="alternate stylesheet" title="Color Brewer" href="./css/color-brewer.css" />
    <link rel="alternate stylesheet" title="Darcula lternative" href="./css/darcula.css" />
    <link rel="alternate stylesheet" title="An Alternative Dark" href="./css/dark.css" />
    <link rel="alternate stylesheet" title="An Alternative Darkula" href="./css/darkula.css" />
    <link rel="alternate stylesheet" title="An Alternative Docco" href="./css/docco.css" />
    <link rel="alternate stylesheet" title="An Alternative Dracula" href="./css/dracula.css" />
    <link rel="alternate stylesheet" title="An Alternative Far" href="./css/far.css" />
    <link rel="alternate stylesheet" title="An Alternative Foundation" href="./css/foundation.css" />
    <link rel="alternate stylesheet" title="An Alternative Github Gist" href="./css/github-gist.css" />
    <link rel="alternate stylesheet" title="An Alternative Github" href="./css/github.css" />
    <link rel="alternate stylesheet" title="An Alternative Gml" href="./css/gml.css" />
    <link rel="alternate stylesheet" title="An Alternative Googlecode" href="./css/googlecode.css" />
    <link rel="alternate stylesheet" title="An Alternative Gradient Dark" href="./css/gradient-dark.css" />
    <link rel="alternate stylesheet" title="An Alternative Grayscale" href="./css/grayscale.css" />
    <link rel="alternate stylesheet" title="An Alternative Gruvbox Dark" href="./css/gruvbox-dark.css" />
    <link rel="alternate stylesheet" title="An Alternative Gruvbox Light" href="./css/gruvbox-light.css" />
    <link rel="alternate stylesheet" title="An Alternative Hopscotch" href="./css/hopscotch.css" />
    <link rel="alternate stylesheet" title="An Alternative Hybrid" href="./css/hybrid.css" />
    <link rel="alternate stylesheet" title="An Alternative Idea" href="./css/idea.css" />
    <link rel="alternate stylesheet" title="An Alternative Ir Black" href="./css/ir-black.css" />
    <link rel="alternate stylesheet" title="An Alternative Isbl Editor Dark" href="./css/isbl-editor-dark.css" />
    <link rel="alternate stylesheet" title="An Alternative Isbl Editor Light" href="./css/isbl-editor-light.css" />
    <link rel="alternate stylesheet" title="An Alternative Kimbie Dark" href="./css/kimbie.dark.css" />
    <link rel="alternate stylesheet" title="An Alternative Kimbie Light" href="./css/kimbie.light.css" />
    <link rel="alternate stylesheet" title="An Alternative Lightfair" href="./css/lightfair.css" />
    <link rel="alternate stylesheet" title="An Alternative Magula" href="./css/magula.css" />
    <link rel="alternate stylesheet" title="An Alternative Mono Blue" href="./css/mono-blue.css" />
    <link rel="alternate stylesheet" title="Monokai Sublime" href="./css/monokai-sublime.css" />
    <link rel="alternate stylesheet" title="An Alternative Monokai" href="./css/monokai.css" />
    <link rel="alternate stylesheet" title="An Alternative Night Owl" href="./css/night-owl.css" />
    <link rel="alternate stylesheet" title="An Alternative Nord" href="./css/nord.css" />
    <link rel="alternate stylesheet" title="An Alternative Obsidian" href="./css/obsidian.css" />
    <link rel="alternate stylesheet" title="An Alternative Ocean" href="./css/ocean.css" />
    <link rel="alternate stylesheet" title="An Alternative Paraiso Dark" href="./css/paraiso-dark.css" />
    <link rel="alternate stylesheet" title="An Alternative Paraiso Light" href="./css/paraiso-light.css" />
    <link rel="alternate stylesheet" title="An Alternative Pojoaque" href="./css/pojoaque.css" />
    <link rel="alternate stylesheet" title="An Alternative Purebasic" href="./css/purebasic.css" />
    <link rel="alternate stylesheet" title="An Alternative Qtcreator Dark" href="./css/qtcreator_dark.css" />
    <link rel="alternate stylesheet" title="An Alternative Qtcreator Light" href="./css/qtcreator_light.css" />
    <link rel="alternate stylesheet" title="An Alternative Railscasts" href="./css/railscasts.css" />
    <link rel="alternate stylesheet" title="An Alternative Rainbow" href="./css/rainbow.css" />
    <link rel="alternate stylesheet" title="An Alternative Routeros" href="./css/routeros.css" />
    <link rel="alternate stylesheet" title="An Alternative School Book" href="./css/school-book.css" />
    <link rel="alternate stylesheet" title="An Alternative Shades Of Purple" href="./css/shades-of-purple.css" />
    <link rel="alternate stylesheet" title="An Alternative Solarized Dark" href="./css/solarized-dark.css" />
    <link rel="alternate stylesheet" title="An Alternative Solarized Light" href="./css/solarized-light.css" />
    <link rel="alternate stylesheet" title="An Alternative Tomorrow Night Blue" href="./css/tomorrow-night-blue.css" />
    <link rel="alternate stylesheet" title="An Alternative Tomorrow Night Bright" href="./css/tomorrow-night-bright.css" />
    <link rel="alternate stylesheet" title="An Alternative Tomorrow Night Eighties" href="./css/tomorrow-night-eighties.css" />
    <link rel="alternate stylesheet" title="An Alternative Tomorrow Night" href="./css/tomorrow-night.css" />
    <link rel="alternate stylesheet" title="An Alternative Tomorrow" href="./css/tomorrow.css" />
    <link rel="alternate stylesheet" title="An Alternative Vs" href="./css/vs.css" />
    <link rel="alternate stylesheet" title="An Alternative Vs 2015" href="./css/vs2015.css" />
    <link rel="alternate stylesheet" title="An Alternative Xcode" href="./css/xcode.css" />
    <link rel="alternate stylesheet" title="An Alternative Xt 256" href="./css/xt256.css" />
    <link rel="alternate stylesheet" title="An Alternative Zenburn" href="./css/zenburn.css" />
</head>

<body>
    <div id="sidebar">
        <div id="header">
            <div class="logo"></div><br>
            <hr style="margin-top:50px;">
            <div class="tag-line"></div>
        </div>
        <div id="lists">
            <div class="sql-cat-white"></div>
            <ul id="categories"></ul>
        </div>
        <div>

            <div class="highlighting">
                <ul id="styles" style="margin-top: 40px;"></ul>
            </div>
        </div>
    </div>


    <div id="content">

        <div id="languages">


            <div class="Post-2016-ICD10 Automation Schema Create-Table Enrollment">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  USE [blindedclients_mdm] GO 
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[Enrollment](
                      [CLNT_ST_CD] [varchar](50) NULL, 
                      [PRIMY_GRP_ID_CD] [varchar](50) NULL, 
                      [PRIMY_SUBGRP_ID_CD] [varchar](50) NULL, 
                      [SUBGRP_NAME] [varchar](50) NULL, 
                      [CLS_ID_CD] [varchar](50) NULL, 
                      [CLS_DESCN] [varchar](50) NULL, 
                      [CLS_PLN_ID_CD] [varchar](50) NULL, 
                      [CLS_PLN_DESCN] [varchar](50) NULL, 
                      [PROD_ID_CD] [varchar](50) NULL, 
                      [PROD_DESCN] [varchar](250) NULL, 
                      [CURR_CTG_PERS_KEY_CD] [varchar](50) NULL, 
                      [PRIMY_SUB_ID_CD] [varchar](50) NULL, 
                      [MBR_SFX_CD] [varchar](50) NULL, 
                      [PRIMY_MBR_ID_CD] [varchar](50) NULL, 
                      [MBR_FST_NAME] [varchar](50) NULL, 
                      [MBR_MID_NAME] [varchar](50) NULL, 
                      [MBR_LST_NAME] [varchar](50) NULL, 
                      [MBR_DOB_DT_KEY] [varchar](50) NULL, 
                      [MBR_GNDR_CD] [varchar](50) NULL, 
                      [MBR_RELSHP_CD] [varchar](50) NULL, 
                      [FMLY_STRCT_CD] [varchar](50) NULL, 
                      [SUB_ADDR_LN_1_TXT] [varchar](50) NULL, 
                      [SUB_ADDR_LN_2_TXT] [varchar](50) NULL, 
                      [SUB_ADDR_LN_3_TXT] [varchar](50) NULL, 
                      [SUB_CITY_NAME] [varchar](50) NULL, 
                      [SUB_ST_CD] [varchar](50) NULL, 
                      [SUB_CNTCT_POSTL_CD] [varchar](50) NULL, 
                      [MBR_POSTL_CD] [varchar](50) NULL, 
                      [MBR_PH_NUM_TXT] [varchar](50) NULL, 
                      [PROD_TYP_CD] [varchar](50) NULL, 
                      [PROD_CAT_CD] [varchar](50) NULL, 
                      [CDM_REC_EFF_DT_KEY] [varchar](50) NULL, 
                      [CDM_REC_CNCL_DT_KEY] [varchar](50) NULL, 
                      [WHOLE_CONTR_CNT] [varchar](50) NULL, 
                      [WHOLE_MBR_CNT] [varchar](50) NULL, 
                      [rowhash] [varchar](32) NULL, 
                      [DMLDate] [datetime] NOT NULL
                    ) ON [PRIMARY] GO 
              
                    </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                      SET 
                    ANSI_NULLS ON GO 
                      SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[legacy_Enrollment](
                      [ClientStateCode] [nvarchar](2) NULL, 
                      [MemberKey] [nvarchar](20) NULL, 
                      [ProxyID] [nvarchar](20) NULL, 
                      [MemberID] [nvarchar](20) NULL, 
                      [PrimaryMemberID] [nvarchar](20) NULL, 
                      [SubscriberID] [nvarchar](20) NULL, 
                      [PrimarySubscriberID] [nvarchar](20) NULL, 
                      [SubscriberKey] [nvarchar](9) NULL, 
                      [GroupID] [nvarchar](20) NULL, 
                      [PrimaryGroupID] [nvarchar](20) NULL, 
                      [SubgroupID] [nvarchar](20) NULL, 
                      [PrimarySubgroupID] [nvarchar](20) NULL, 
                      [GroupStructureKey] [nvarchar](20) NULL, 
                      [ClassDescription] [nvarchar](60) NULL, 
                      [ClassPlanID] [nvarchar](10) NULL, 
                      [GroupClassPlanKey] [nvarchar](20) NULL, 
                      [ProductKey] [nvarchar](20) NULL, 
                      [ProductCategoryCode] [nvarchar](3) NULL, 
                      [ProductTypeCode] [nvarchar](6) NULL, 
                      [DOB] [int] NULL, 
                      [Gender] [nvarchar](1) NULL, 
                      [RelationshipCode] [nvarchar](1) NULL, 
                      [ZipCode] [nvarchar](5) NULL, 
                      [EffectiveDate] [int] NULL, 
                      [CancelledDate] [int] NULL, 
                      [FamilyStructureCode] [nvarchar](1) NULL, 
                      [LastName] [nvarchar](25) NULL, 
                      [FirstName] [nvarchar](20) NULL, 
                      [MiddleName] [nvarchar](20) NULL, 
                      [WholeMemberCount] [int] NULL, 
                      [WholeContractCount] [int] NULL, 
                      [AddressLine1] [nvarchar](60) NULL, 
                      [AddressLine2] [nvarchar](60) NULL, 
                      [AddressLine3] [nvarchar](60) NULL, 
                      [City] [nvarchar](60) NULL, 
                      [State] [nvarchar](2) NULL, 
                      [Phone] [nvarchar](12) NULL, 
                      [CTGKey] [nvarchar](16) NULL, 
                      [SubGroupName] [nvarchar](60) NULL, 
                      [ClassIDCode] [nvarchar](7) NULL, 
                      [ClassPlanDescription] [nvarchar](100) NULL, 
                      [ProductIDCode] [nvarchar](20) NULL, 
                      [ProductDescription] [nvarchar](100) NULL, 
                      [OriginSourceCode] [nvarchar](3) NULL, 
                      [DMLDate] [datetime] NOT NULL
                    ) ON [PRIMARY] GO 

                   </code>
             </pre>
            </div>
            <div class="Pre-2016-ICD9 Automation Schema legacy-Medical-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                          SET 
                          ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[legacy_Medical](
                      [ClientStateCode] [nvarchar](2) NULL, 
                      [ClaimKeyCode] [nvarchar](15) NULL, 
                      [ClaimLineNumber] [nvarchar](5) NULL, 
                      [SequenceNumber] [nvarchar](5) NULL, 
                      [ClaimDetailFactKey] [nvarchar](15) NULL, 
                      [ClaimIDNumber] [nvarchar](50) NULL, 
                      [PaidDate] [int] NULL, 
                      [ServiceFromDate] [int] NULL, 
                      [ServiceToDate] [int] NULL, 
                      [ClaimType] [nvarchar](1) NULL, 
                      [MemberKey] [nvarchar](20) NULL, 
                      [ProxyID] [nvarchar](20) NULL, 
                      [MemberID] [nvarchar](20) NULL, 
                      [MemberFirstName] [nvarchar](20) NULL, 
                      [DOB] [int] NULL, 
                      [Gender] [nvarchar](1) NULL, 
                      [RelationshipCode] [nvarchar](1) NULL, 
                      [GroupID] [nvarchar](20) NULL, 
                      [PrimaryGroupID] [nvarchar](20) NULL, 
                      [PrimarySubgroupID] [nvarchar](20) NULL, 
                      [GroupStructureKey] [nvarchar](20) NULL, 
                      [SubscriberID] [nvarchar](20) NULL, 
                      [PrimarySubscriberID] [nvarchar](20) NULL, 
                      [SubscriberKey] [nvarchar](29) NULL, 
                      [ClassPlanID] [nvarchar](10) NULL, 
                      [GroupClassPlanKey] [nvarchar](20) NULL, 
                      [ProductCategoryCode] [nvarchar](3) NULL, 
                      [SubscriberZip] [nvarchar](5) NULL, 
                      [DeliveringProviderKey] [nvarchar](20) NULL, 
                      [DeliveringProviderTaxID] [nvarchar](20) NULL, 
                      [DeliveringProviderName] [nvarchar](50) NULL, 
                      [ReferringProviderTaxID] [nvarchar](20) NULL, 
                      [DeliveringProviderZip] [nvarchar](5) NULL, 
                      [DeliveringProviderSpecialty] [nvarchar](10) NULL, 
                      [PrimaryCareIndicator] [nvarchar](1) NULL, 
                      [ReferralIndicator] [nvarchar](1) NULL, 
                      [NetworkAreaIndicator] [nvarchar](1) NULL, 
                      [NetworkServiceIndicator] [nvarchar](1) NULL, 
                      [NetworkProviderIndicator] [nvarchar](1) NULL, 
                      [ICD9_1] [nvarchar](5) NULL, 
                      [ICD9_2] [nvarchar](5) NULL, 
                      [ICD9_3] [nvarchar](5) NULL, 
                      [ICD9_4] [nvarchar](5) NULL, 
                      [ICD9_5] [nvarchar](5) NULL, 
                      [CauseOfIllness] [nvarchar](6) NULL, 
                      [ICD9Proc_1] [nvarchar](5) NULL, 
                      [ICD9Proc_2] [nvarchar](5) NULL, 
                      [ICD9Proc_3] [nvarchar](5) NULL, 
                      [ICD9Proc_4] [nvarchar](5) NULL, 
                      [BundledHCPCSCode] [nvarchar](5) NULL, 
                      [ProcedureCode_1] [nvarchar](5) NULL, 
                      [ProcedureModifier1] [nvarchar](4) NULL, 
                      [ProcedureModifier2] [nvarchar](4) NULL, 
                      [RevenueCode] [nvarchar](4) NULL, 
                      [UBProcedureCode] [nvarchar](10) NULL, 
                      [DRG] [nvarchar](5) NULL, 
                      [TypeOfService] [nvarchar](4) NULL, 
                      [ProviderCategoryCode] [nvarchar](6) NULL, 
                      [PlaceOfService] [nvarchar](3) NULL, 
                      [UBDischargeStatus] [nvarchar](3) NULL, 
                      [UBAdmissionType] [nvarchar](3) NULL, 
                      [ServiceCount] [int] NULL, 
                      [ChargeAmount] [float] NULL, 
                      [IneligibleAmount] [float] NULL, 
                      [IneligibleCode] [nvarchar](6) NULL, 
                      [DiscountAmount] [float] NULL, 
                      [WithholdAmount] [float] NULL, 
                      [UCRAmount] [float] NULL, 
                      [Allowable] [float] NULL, 
                      [PenaltyAmount] [float] NULL, 
                      [DeductibleAmount] [float] NULL, 
                      [CoinsuranceAmount] [float] NULL, 
                      [CoPaymentAmount] [float] NULL, 
                      [COBSavings] [float] NULL, 
                      [COBStatus] [nvarchar](1) NULL, 
                      [PaidAmount] [float] NULL, 
                      [ProviderTypeCode] [nvarchar](1) NULL, 
                      [PrimaryMemberID] [nvarchar](9) NULL, 
                      [FamilyStructureCode] [nvarchar](1) NULL, 
                      [ProductType] [nvarchar](5) NULL, 
                      [ProductKey] [nvarchar](20) NULL, 
                      [ReportingCategory] [nvarchar](4) NULL, 
                      [ClaimFilingCode] [nvarchar](1) NULL, 
                      [FilterFlag] [nvarchar](1) NULL, 
                      [CaseCount] [int] NULL, 
                      [UB92TypeOfBill] [nvarchar](3) NULL, 
                      [ITSAccessFee] [float] NULL, 
                      [ITSSurchargeAmount] [float] NULL, 
                      [PaidWithoutITSAmount] [float] NULL, 
                      [MemberLastName] [nvarchar](25) NULL, 
                      [MemberMiddleName] [nvarchar](20) NULL, 
                      [CTGKey] [nvarchar](16) NULL, 
                      [SubGroupName] [nvarchar](60) NULL, 
                      [ClassIDCode] [nvarchar](7) NULL, 
                      [ProductIDCode] [nvarchar](20) NULL, 
                      [OriginatingSourceCode] [nvarchar](3) NULL, 
                      [ProviderNPI] [nvarchar](10) NULL, 
                      [ProviderContractAnalysisExcCode] [nvarchar](1) NULL, 
                      [CurrentNetworkCode] [nvarchar](4) NULL, 
                      [ProviderIdentifiierCode] [nvarchar](50) NULL, 
                      [OtherPayerCoveredAmount] [float] NULL, 
                      [ProviderMISCode] [nvarchar](10) NULL, 
                      [ProviderAddressLine1] [nvarchar](40) NULL, 
                      [ProviderAddressLine2] [nvarchar](40) NULL, 
                      [ProviderAddressLine3] [nvarchar](40) NULL, 
                      [ProviderCity] [nvarchar](20) NULL, 
                      [ProviderState] [nvarchar](2) NULL, 
                      [DMLDate] [datetime] NOT NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>

            <div class="Pre-2016-ICD9 Automation Schema Legacy-Prescription-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                    SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON 
                    GO 
                    CREATE TABLE [dbo].[legacy_Rx](
                      [ClientStateCode] [nvarchar](2) NULL, 
                      [ClaimKey] [nvarchar](15) NULL, 
                      [LineNumber] [nvarchar](5) NULL, 
                      [SequenceNumber] [nvarchar](20) NULL, 
                      [ClaimDetailFactKey] [nvarchar](20) NULL, 
                      [ClaimIDNumber] [nvarchar](30) NULL, 
                      [PaidDate] [int] NULL, 
                      [WrittenDate] [int] NULL, 
                      [FillDate] [int] NULL, 
                      [ServiceDate] [int] NULL, 
                      [MemberKey] [nvarchar](20) NULL, 
                      [ProxyID] [nvarchar](20) NULL, 
                      [MemberID] [nvarchar](20) NULL, 
                      [PrimaryMemberID] [nvarchar](9) NULL, 
                      [MemberFirstName] [nvarchar](20) NULL, 
                      [DOB] [int] NULL, 
                      [Gender] [nvarchar](1) NULL, 
                      [RelationshipCode] [nvarchar](1) NULL, 
                      [GroupID] [nvarchar](20) NULL, 
                      [PrimaryGroupID] [nvarchar](20) NULL, 
                      [SubGroupID] [nvarchar](20) NULL, 
                      [PrimarySubgroupID] [nvarchar](20) NULL, 
                      [GroupStructureKey] [nvarchar](20) NULL, 
                      [SubscriberID] [nvarchar](20) NULL, 
                      [PrimarySubscriberID] [nvarchar](20) NULL, 
                      [PolicyNumber] [nvarchar](5) NULL, 
                      [SubscriberZip] [nvarchar](5) NULL, 
                      [SubscriberKey] [nvarchar](13) NULL, 
                      [FamilyStructureCode] [nvarchar](1) NULL, 
                      [ClassPlanID] [nvarchar](10) NULL, 
                      [GroupClassPlanKey] [nvarchar](20) NULL, 
                      [ProductCategoryCode] [nvarchar](3) NULL, 
                      [ProgramType] [nvarchar](5) NULL, 
                      [ProductKey] [nvarchar](20) NULL, 
                      [PharmacyNumber] [nvarchar](20) NULL, 
                      [PrescribingPhysicianDEA] [nvarchar](10) NULL, 
                      [FillerPharmDetails] [nvarchar](132) NULL, 
                      [PrescriptionNumber] [nvarchar](30) NULL, 
                      [NDC] [nvarchar](20) NULL, 
                      [DrugTypeCode] [nvarchar](1) NULL, 
                      [DrugName] [nvarchar](50) NULL, 
                      [RefillCount] [int] NULL, 
                      [CostDetermination] [nvarchar](1) NULL, 
                      [UCRAmount] [float] NULL, 
                      [CoveredExpenseAmount] [float] NULL, 
                      [URReviewFlag] [nvarchar](1) NULL, 
                      [PenaltyAmount] [float] NULL, 
                      [ICD9CM] [nvarchar](5) NULL, 
                      [PPOPharmacyFlag] [nvarchar](1) NULL, 
                      [PlaceofService] [nvarchar](2) NULL, 
                      [ProcedureCode] [nvarchar](5) NULL, 
                      [FillerMiddle] [nvarchar](6) NULL, 
                      [TypeOfService] [nvarchar](4) NULL, 
                      [ReportingCategory] [nvarchar](4) NULL, 
                      [COBStatus] [nvarchar](1) NULL, 
                      [COBSavings] [float] NULL, 
                      [DispensedQuantity] [int] NULL, 
                      [DaysSupply] [nvarchar](255) NULL, 
                      [SubmittedAmount] [float] NULL, 
                      [IngredientCost] [float] NULL, 
                      [DisensingFee] [float] NULL, 
                      [SalesTax] [float] NULL, 
                      [DeductibleAmount] [float] NULL, 
                      [CoinsuranceAmount] [float] NULL, 
                      [CopaymentAmount] [float] NULL, 
                      [IneligibleAmount] [float] NULL, 
                      [IneligibleReason] [nvarchar](6) NULL, 
                      [DiscountAmount] [float] NULL, 
                      [PaidAmount] [float] NULL, 
                      [ClaimType] [nvarchar](1) NULL, 
                      [FilterFlag] [nvarchar](1) NULL, 
                      [CaseCount] [int] NULL, 
                      [UB92BillType] [nvarchar](3) NULL, 
                      [OverMaxAplliedAmount] [float] NULL, 
                      [StoplossAmount] [float] NULL, 
                      [AllowedAmount] [float] NULL, 
                      [DirectMailCode] [nvarchar](15) NULL, 
                      [MemberLastName] [nvarchar](25) NULL, 
                      [MemberMiddleInitial] [nvarchar](20) NULL, 
                      [CTGKey] [nvarchar](16) NULL, 
                      [SubgroupName] [nvarchar](60) NULL, 
                      [CLassIDCode] [nvarchar](7) NULL, 
                      [ProductIDCode] [nvarchar](20) NULL, 
                      [OriginatingSourceCode] [nvarchar](3) NULL, 
                      [ProviderNPI] [nvarchar](10) NULL, 
                      [PCAExcCode] [nvarchar](1) NULL, 
                      [CurrentNetworkCode] [nvarchar](4) NULL, 
                      [ProviderIDCode] [nvarchar](50) NULL, 
                      [OtherPayerCoveredAmount] [float] NULL, 
                      [DAWCode] [nvarchar](1) NULL, 
                      [FillerEnd] [nvarchar](140) NULL, 
                      [DMLDate] [datetime] NOT NULL
                    ) ON [PRIMARY] GO 
</code></pre>
            </div>
            <div class="Pre-2016-ICD9 Automation Schema  Legacy-Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[legacy_stage_Enrollment](
                      [ClientStateCode] [nvarchar](2) NULL, 
                      [MemberKey] [nvarchar](20) NULL, 
                      [ProxyID] [nvarchar](20) NULL, 
                      [MemberID] [nvarchar](20) NULL, 
                      [PrimaryMemberID] [nvarchar](20) NULL, 
                      [SubscriberID] [nvarchar](20) NULL, 
                      [PrimarySubscriberID] [nvarchar](20) NULL, 
                      [SubscriberKey] [nvarchar](9) NULL, 
                      [GroupID] [nvarchar](20) NULL, 
                      [PrimaryGroupID] [nvarchar](20) NULL, 
                      [SubgroupID] [nvarchar](20) NULL, 
                      [PrimarySubgroupID] [nvarchar](20) NULL, 
                      [GroupStructureKey] [nvarchar](20) NULL, 
                      [ClassDescription] [nvarchar](60) NULL, 
                      [ClassPlanID] [nvarchar](10) NULL, 
                      [GroupClassPlanKey] [nvarchar](20) NULL, 
                      [ProductKey] [nvarchar](20) NULL, 
                      [ProductCategoryCode] [nvarchar](3) NULL, 
                      [ProductTypeCode] [nvarchar](6) NULL, 
                      [DOB] [int] NULL, 
                      [Gender] [nvarchar](1) NULL, 
                      [RelationshipCode] [nvarchar](1) NULL, 
                      [ZipCode] [nvarchar](5) NULL, 
                      [EffectiveDate] [int] NULL, 
                      [CancelledDate] [int] NULL, 
                      [FamilyStructureCode] [nvarchar](1) NULL, 
                      [LastName] [nvarchar](25) NULL, 
                      [FirstName] [nvarchar](20) NULL, 
                      [MiddleName] [nvarchar](20) NULL, 
                      [WholeMemberCount] [int] NULL, 
                      [WholeContractCount] [int] NULL, 
                      [AddressLine1] [nvarchar](60) NULL, 
                      [AddressLine2] [nvarchar](60) NULL, 
                      [AddressLine3] [nvarchar](60) NULL, 
                      [City] [nvarchar](60) NULL, 
                      [State] [nvarchar](2) NULL, 
                      [Phone] [nvarchar](12) NULL, 
                      [CTGKey] [nvarchar](16) NULL, 
                      [SubGroupName] [nvarchar](60) NULL, 
                      [ClassIDCode] [nvarchar](7) NULL, 
                      [ClassPlanDescription] [nvarchar](100) NULL, 
                      [ProductIDCode] [nvarchar](20) NULL, 
                      [ProductDescription] [nvarchar](100) NULL, 
                      [OriginSourceCode] [nvarchar](3) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9  Automation Schema Legacy-Medical-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[legacy_stage_Medical](
                      [ClientStateCode] [nvarchar](2) NULL, 
                      [ClaimKeyCode] [nvarchar](15) NULL, 
                      [ClaimLineNumber] [nvarchar](5) NULL, 
                      [SequenceNumber] [nvarchar](5) NULL, 
                      [ClaimDetailFactKey] [nvarchar](15) NULL, 
                      [ClaimIDNumber] [nvarchar](50) NULL, 
                      [PaidDate] [int] NULL, 
                      [ServiceFromDate] [int] NULL, 
                      [ServiceToDate] [int] NULL, 
                      [ClaimType] [nvarchar](1) NULL, 
                      [MemberKey] [nvarchar](20) NULL, 
                      [ProxyID] [nvarchar](20) NULL, 
                      [MemberID] [nvarchar](20) NULL, 
                      [MemberFirstName] [nvarchar](20) NULL, 
                      [DOB] [int] NULL, 
                      [Gender] [nvarchar](1) NULL, 
                      [RelationshipCode] [nvarchar](1) NULL, 
                      [GroupID] [nvarchar](20) NULL, 
                      [PrimaryGroupID] [nvarchar](20) NULL, 
                      [PrimarySubgroupID] [nvarchar](20) NULL, 
                      [GroupStructureKey] [nvarchar](20) NULL, 
                      [SubscriberID] [nvarchar](20) NULL, 
                      [PrimarySubscriberID] [nvarchar](20) NULL, 
                      [SubscriberKey] [nvarchar](29) NULL, 
                      [ClassPlanID] [nvarchar](10) NULL, 
                      [GroupClassPlanKey] [nvarchar](20) NULL, 
                      [ProductCategoryCode] [nvarchar](3) NULL, 
                      [SubscriberZip] [nvarchar](5) NULL, 
                      [DeliveringProviderKey] [nvarchar](20) NULL, 
                      [DeliveringProviderTaxID] [nvarchar](20) NULL, 
                      [DeliveringProviderName] [nvarchar](50) NULL, 
                      [ReferringProviderTaxID] [nvarchar](20) NULL, 
                      [DeliveringProviderZip] [nvarchar](5) NULL, 
                      [DeliveringProviderSpecialty] [nvarchar](10) NULL, 
                      [PrimaryCareIndicator] [nvarchar](1) NULL, 
                      [ReferralIndicator] [nvarchar](1) NULL, 
                      [NetworkAreaIndicator] [nvarchar](1) NULL, 
                      [NetworkServiceIndicator] [nvarchar](1) NULL, 
                      [NetworkProviderIndicator] [nvarchar](1) NULL, 
                      [ICD9_1] [nvarchar](5) NULL, 
                      [ICD9_2] [nvarchar](5) NULL, 
                      [ICD9_3] [nvarchar](5) NULL, 
                      [ICD9_4] [nvarchar](5) NULL, 
                      [ICD9_5] [nvarchar](5) NULL, 
                      [CauseOfIllness] [nvarchar](6) NULL, 
                      [ICD9Proc_1] [nvarchar](5) NULL, 
                      [ICD9Proc_2] [nvarchar](5) NULL, 
                      [ICD9Proc_3] [nvarchar](5) NULL, 
                      [ICD9Proc_4] [nvarchar](5) NULL, 
                      [BundledHCPCSCode] [nvarchar](5) NULL, 
                      [ProcedureCode_1] [nvarchar](5) NULL, 
                      [ProcedureModifier1] [nvarchar](4) NULL, 
                      [ProcedureModifier2] [nvarchar](4) NULL, 
                      [RevenueCode] [nvarchar](4) NULL, 
                      [UBProcedureCode] [nvarchar](10) NULL, 
                      [DRG] [nvarchar](5) NULL, 
                      [TypeOfService] [nvarchar](4) NULL, 
                      [ProviderCategoryCode] [nvarchar](6) NULL, 
                      [PlaceOfService] [nvarchar](3) NULL, 
                      [UBDischargeStatus] [nvarchar](3) NULL, 
                      [UBAdmissionType] [nvarchar](3) NULL, 
                      [ServiceCount] [int] NULL, 
                      [ChargeAmount] [float] NULL, 
                      [IneligibleAmount] [float] NULL, 
                      [IneligibleCode] [nvarchar](6) NULL, 
                      [DiscountAmount] [float] NULL, 
                      [WithholdAmount] [float] NULL, 
                      [UCRAmount] [float] NULL, 
                      [Allowable] [float] NULL, 
                      [PenaltyAmount] [float] NULL, 
                      [DeductibleAmount] [float] NULL, 
                      [CoinsuranceAmount] [float] NULL, 
                      [CoPaymentAmount] [float] NULL, 
                      [COBSavings] [float] NULL, 
                      [COBStatus] [nvarchar](1) NULL, 
                      [PaidAmount] [float] NULL, 
                      [ProviderTypeCode] [nvarchar](1) NULL, 
                      [PrimaryMemberID] [nvarchar](9) NULL, 
                      [FamilyStructureCode] [nvarchar](1) NULL, 
                      [ProductType] [nvarchar](5) NULL, 
                      [ProductKey] [nvarchar](20) NULL, 
                      [ReportingCategory] [nvarchar](4) NULL, 
                      [ClaimFilingCode] [nvarchar](1) NULL, 
                      [FilterFlag] [nvarchar](1) NULL, 
                      [CaseCount] [int] NULL, 
                      [UB92TypeOfBill] [nvarchar](3) NULL, 
                      [ITSAccessFee] [float] NULL, 
                      [ITSSurchargeAmount] [float] NULL, 
                      [PaidWithoutITSAmount] [float] NULL, 
                      [MemberLastName] [nvarchar](25) NULL, 
                      [MemberMiddleName] [nvarchar](20) NULL, 
                      [CTGKey] [nvarchar](16) NULL, 
                      [SubGroupName] [nvarchar](60) NULL, 
                      [ClassIDCode] [nvarchar](7) NULL, 
                      [ProductIDCode] [nvarchar](20) NULL, 
                      [OriginatingSourceCode] [nvarchar](3) NULL, 
                      [ProviderNPI] [nvarchar](10) NULL, 
                      [ProviderContractAnalysisExcCode] [nvarchar](1) NULL, 
                      [CurrentNetworkCode] [nvarchar](4) NULL, 
                      [ProviderIdentifiierCode] [nvarchar](50) NULL, 
                      [OtherPayerCoveredAmount] [float] NULL, 
                      [ProviderMISCode] [nvarchar](10) NULL, 
                      [ProviderAddressLine1] [nvarchar](40) NULL, 
                      [ProviderAddressLine2] [nvarchar](40) NULL, 
                      [ProviderAddressLine3] [nvarchar](40) NULL, 
                      [ProviderCity] [nvarchar](20) NULL, 
                      [ProviderState] [nvarchar](2) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9  Automation Schema Legacy-Eligibility-Stage Create-Table">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[legacy_stage_Rx](
                      [ClientStateCode] [nvarchar](2) NULL, 
                      [ClaimKey] [nvarchar](15) NULL, 
                      [LineNumber] [nvarchar](5) NULL, 
                      [SequenceNumber] [nvarchar](20) NULL, 
                      [ClaimDetailFactKey] [nvarchar](20) NULL, 
                      [ClaimIDNumber] [nvarchar](30) NULL, 
                      [PaidDate] [int] NULL, 
                      [WrittenDate] [int] NULL, 
                      [FillDate] [int] NULL, 
                      [ServiceDate] [int] NULL, 
                      [MemberKey] [nvarchar](20) NULL, 
                      [ProxyID] [nvarchar](20) NULL, 
                      [MemberID] [nvarchar](20) NULL, 
                      [PrimaryMemberID] [nvarchar](9) NULL, 
                      [MemberFirstName] [nvarchar](20) NULL, 
                      [DOB] [int] NULL, 
                      [Gender] [nvarchar](1) NULL, 
                      [RelationshipCode] [nvarchar](1) NULL, 
                      [GroupID] [nvarchar](20) NULL, 
                      [PrimaryGroupID] [nvarchar](20) NULL, 
                      [SubGroupID] [nvarchar](20) NULL, 
                      [PrimarySubgroupID] [nvarchar](20) NULL, 
                      [GroupStructureKey] [nvarchar](20) NULL, 
                      [SubscriberID] [nvarchar](20) NULL, 
                      [PrimarySubscriberID] [nvarchar](20) NULL, 
                      [PolicyNumber] [nvarchar](5) NULL, 
                      [SubscriberZip] [nvarchar](5) NULL, 
                      [SubscriberKey] [nvarchar](13) NULL, 
                      [FamilyStructureCode] [nvarchar](1) NULL, 
                      [ClassPlanID] [nvarchar](10) NULL, 
                      [GroupClassPlanKey] [nvarchar](20) NULL, 
                      [ProductCategoryCode] [nvarchar](3) NULL, 
                      [ProgramType] [nvarchar](5) NULL, 
                      [ProductKey] [nvarchar](20) NULL, 
                      [PharmacyNumber] [nvarchar](20) NULL, 
                      [PrescribingPhysicianDEA] [nvarchar](10) NULL, 
                      [FillerPharmDetails] [nvarchar](132) NULL, 
                      [PrescriptionNumber] [nvarchar](30) NULL, 
                      [NDC] [nvarchar](20) NULL, 
                      [DrugTypeCode] [nvarchar](1) NULL, 
                      [DrugName] [nvarchar](50) NULL, 
                      [RefillCount] [int] NULL, 
                      [CostDetermination] [nvarchar](1) NULL, 
                      [UCRAmount] [float] NULL, 
                      [CoveredExpenseAmount] [float] NULL, 
                      [URReviewFlag] [nvarchar](1) NULL, 
                      [PenaltyAmount] [float] NULL, 
                      [ICD9CM] [nvarchar](5) NULL, 
                      [PPOPharmacyFlag] [nvarchar](1) NULL, 
                      [PlaceofService] [nvarchar](2) NULL, 
                      [ProcedureCode] [nvarchar](5) NULL, 
                      [FillerMiddle] [nvarchar](6) NULL, 
                      [TypeOfService] [nvarchar](4) NULL, 
                      [ReportingCategory] [nvarchar](4) NULL, 
                      [COBStatus] [nvarchar](1) NULL, 
                      [COBSavings] [float] NULL, 
                      [DispensedQuantity] [int] NULL, 
                      [DaysSupply] [nvarchar](255) NULL, 
                      [SubmittedAmount] [float] NULL, 
                      [IngredientCost] [float] NULL, 
                      [DisensingFee] [float] NULL, 
                      [SalesTax] [float] NULL, 
                      [DeductibleAmount] [float] NULL, 
                      [CoinsuranceAmount] [float] NULL, 
                      [CopaymentAmount] [float] NULL, 
                      [IneligibleAmount] [float] NULL, 
                      [IneligibleReason] [nvarchar](6) NULL, 
                      [DiscountAmount] [float] NULL, 
                      [PaidAmount] [float] NULL, 
                      [ClaimType] [nvarchar](1) NULL, 
                      [FilterFlag] [nvarchar](1) NULL, 
                      [CaseCount] [int] NULL, 
                      [UB92BillType] [nvarchar](3) NULL, 
                      [OverMaxAplliedAmount] [float] NULL, 
                      [StoplossAmount] [float] NULL, 
                      [AllowedAmount] [float] NULL, 
                      [DirectMailCode] [nvarchar](15) NULL, 
                      [MemberLastName] [nvarchar](25) NULL, 
                      [MemberMiddleInitial] [nvarchar](20) NULL, 
                      [CTGKey] [nvarchar](16) NULL, 
                      [SubgroupName] [nvarchar](60) NULL, 
                      [CLassIDCode] [nvarchar](7) NULL, 
                      [ProductIDCode] [nvarchar](20) NULL, 
                      [OriginatingSourceCode] [nvarchar](3) NULL, 
                      [ProviderNPI] [nvarchar](10) NULL, 
                      [PCAExcCode] [nvarchar](1) NULL, 
                      [CurrentNetworkCode] [nvarchar](4) NULL, 
                      [ProviderIDCode] [nvarchar](50) NULL, 
                      [OtherPayerCoveredAmount] [float] NULL, 
                      [DAWCode] [nvarchar](1) NULL, 
                      [FillerEnd] [nvarchar](140) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Post-2016-ICD10  Automation Schema Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[Medical](
                      [CLNT_ST_CD] [varchar](50) NULL, 
                      [PRIMY_GRP_ID_CD] [varchar](50) NULL, 
                      [PRIMY_SUBGRP_ID_CD] [varchar](50) NULL, 
                      [SUBGRP_NAME] [varchar](50) NULL, 
                      [CLS_ID_CD] [varchar](50) NULL, 
                      [CLS_DESCN] [varchar](50) NULL, 
                      [CLS_PLN_ID_CD] [varchar](50) NULL, 
                      [CLS_PLN_DESCN] [varchar](50) NULL, 
                      [PROD_ID_CD] [varchar](50) NULL, 
                      [PROD_DESCN] [varchar](250) NULL, 
                      [CURR_CTG_PERS_KEY_CD] [varchar](50) NULL, 
                      [PRIMY_SUB_ID_CD] [varchar](50) NULL, 
                      [MBR_SFX_CD] [varchar](50) NULL, 
                      [PRIMY_MBR_ID_CD] [varchar](50) NULL, 
                      [MBR_FST_NAME] [varchar](50) NULL, 
                      [MBR_MID_NAME] [varchar](50) NULL, 
                      [MBR_LST_NAME] [varchar](50) NULL, 
                      [MBR_DOB_DT] [varchar](50) NULL, 
                      [MBR_GNDR_CD] [varchar](50) NULL, 
                      [MBR_RELSHP_CD] [varchar](50) NULL, 
                      [FMLY_STRCT_CD] [varchar](50) NULL, 
                      [SUB_CNTCT_POSTL_CD] [varchar](50) NULL, 
                      [MBR_POSTL_CD] [varchar](50) NULL, 
                      [PROD_TYP_CD] [varchar](50) NULL, 
                      [PROD_CAT_CD] [varchar](50) NULL, 
                      [CLM_ID_CD] [varchar](50) NULL, 
                      [CLI_NUM_CD] [varchar](50) NULL, 
                      [TO_CLAIM_ID] [varchar](50) NULL, 
                      [PROC_DT] [varchar](50) NULL, 
                      [SVC_FROM_DT] [varchar](50) NULL, 
                      [SVC_TO_DT] [varchar](50) NULL, 
                      [ADMT_DT] [varchar](50) NULL, 
                      [DSCHRG_DT] [varchar](50) NULL, 
                      [CLM_PD_ADJST_CD] [varchar](50) NULL, 
                      [NTWK_AREA_IND] [varchar](50) NULL, 
                      [SVCG_PROV_IN_NTWK_CD] [varchar](50) NULL, 
                      [DIAG_CD_1] [varchar](50) NULL, 
                      [DIAG_CD_2] [varchar](50) NULL, 
                      [DIAG_CD_3] [varchar](50) NULL, 
                      [DIAG_CD_4] [varchar](50) NULL, 
                      [DIAG_CD_5] [varchar](50) NULL, 
                      [ICD_PRCDR_CD_1] [varchar](50) NULL, 
                      [ICD_PRCDR_CD_2] [varchar](50) NULL, 
                      [ICD_PRCDR_CD_3] [varchar](50) NULL, 
                      [ICD_PRCDR_CD_4] [varchar](50) NULL, 
                      [ICD_VRSN_CD] [varchar](50) NULL, 
                      [BNDLD_HCPCS_CPT_CD] [varchar](50) NULL, 
                      [HCPCS_CPT_CD] [varchar](50) NULL, 
                      [HCPCS_CPT_MODR_1_TXT] [varchar](50) NULL, 
                      [HCPCS_CPT_MODR_2_TXT] [varchar](50) NULL, 
                      [HCPCS_CPT_MODR_3_TXT] [varchar](50) NULL, 
                      [HCPCS_CPT_MODR_4_TXT] [varchar](50) NULL, 
                      [RVNU_CD] [varchar](50) NULL, 
                      [PRCDR_CD] [varchar](50) NULL, 
                      [DRG_ID_CD] [varchar](50) NULL, 
                      [SVC_TYP_CD] [varchar](50) NULL, 
                      [RPTG_CAT_CD] [varchar](50) NULL, 
                      [CLM_FILING_CD] [varchar](50) NULL, 
                      [CLM_BILLG_TYP_CD] [varchar](50) NULL, 
                      [FLTR_FLAG_CD] [varchar](50) NULL, 
                      [POT_CD] [varchar](50) NULL, 
                      [DISCHG_STAT_CD] [varchar](50) NULL, 
                      [ADM_TYP_CD] [varchar](50) NULL, 
                      [ADM_SRC_CD] [varchar](50) NULL, 
                      [OTH_PAYR_TYP_CD] [varchar](50) NULL, 
                      [INELIG_RSN_CD] [varchar](50) NULL, 
                      [Prior_Authorization_Code] [varchar](50) NULL, 
                      [MBR_PCP_IND] [varchar](50) NULL, 
                      [DELV_PROV_TAX_ID_CD] [varchar](50) NULL, 
                      [DELV_PROV_NPI_ID_CD] [varchar](50) NULL, 
                      [DELV_PROV_ID_CD] [varchar](50) NULL, 
                      [DELV_PIMS_ID_CD] [varchar](50) NULL, 
                      [DELV_PROV_NAME] [varchar](50) NULL, 
                      [DELV_PROV_ADDR_LN_1_TXT] [varchar](50) NULL, 
                      [DELV_PROV_ADDR_LN_2_TXT] [varchar](50) NULL, 
                      [DELV_PROV_ADDR_LN_3_TXT] [varchar](50) NULL, 
                      [DELV_PROV_CITY_NAME] [varchar](50) NULL, 
                      [DELV_PROV_ST_CD] [varchar](50) NULL, 
                      [DELV_PROV_ZIP_CD] [varchar](50) NULL, 
                      [DELV_PRIMY_PROV_SPCLTY_CD] [varchar](50) NULL, 
                      [DELV_PROV_CAT_CD] [varchar](50) NULL, 
                      [DELV_PROV_TYP_CD] [varchar](50) NULL, 
                      [REFRNG_PROV_TAX_ID_CD] [varchar](50) NULL, 
                      [REFERRING PROVIDER NAME] [varchar](50) NULL, 
                      [REFRL_IND] [varchar](50) NULL, 
                      [PROV_RELSHP_TYP_CD] [varchar](50) NULL, 
                      [HOSP_DAY_CNT] [varchar](50) NULL, 
                      [CATZ_CASE_CNT] [varchar](50) NULL, 
                      [BILLD_CHRG_AMT] [varchar](50) NULL, 
                      [BILLD_COVD_AMT] [varchar](50) NULL, 
                      [PROV_ALWD_AMT] [varchar](50) NULL, 
                      [PD_WO_ITS_AMT] [varchar](50) NULL, 
                      [PD_AMT] [varchar](50) NULL, 
                      [DED_AMT] [varchar](50) NULL, 
                      [COIN_AMT] [varchar](50) NULL, 
                      [COPAYMT_AMT] [varchar](50) NULL, 
                      [COB_SAVGS_AMT] [varchar](50) NULL, 
                      [ITS_ACC_FEE_AMT] [varchar](50) NULL, 
                      [ITS_SURCHRG_AMT] [varchar](50) NULL, 
                      [INELIG_AMT] [varchar](50) NULL, 
                      [DISC_AMT] [varchar](50) NULL, 
                      [RSK_WTHD_AMT] [varchar](50) NULL, 
                      [OTH_PAYR_COVD_AMT] [varchar](50) NULL, 
                      [rowhash] [varchar](32) NULL, 
                      [DMLDate] [datetime] NOT NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[MedicalAudit](
                      [Name] [nvarchar](255) NULL, 
                      [Employee number] [nvarchar](255) NULL, 
                      [Session] [nvarchar](255) NULL, 
                      [Plan Type] [nvarchar](255) NULL, 
                      [Plan] [nvarchar](255) NULL, 
                      [Declined] [nvarchar](255) NULL, 
                      [Option] [nvarchar](255) NULL, 
                      [Dependent] [nvarchar](255) NULL, 
                      [Relationship] [nvarchar](255) NULL, 
                      [EmployeeName] [nvarchar](255) NULL, 
                      [Company] [nvarchar](255) NULL, 
                      [EmpNumber] [nvarchar](255) NULL, 
                      [EMPSSN] [nvarchar](255) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[PlanSource](
                      [Code] [nvarchar](255) NULL, 
                      [Description] [nvarchar](255) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[ProviderSpecialty](
                      [PROD_CAT_CD] [nvarchar](255) NULL, 
                      [F2] [nvarchar](255) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[Refactor](
                      [Code] [nvarchar](255) NULL, 
                      [Description] [nvarchar](255) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[RegenceServiceType](
                      [Code ] [nvarchar](255) NULL, 
                      [Description] [nvarchar](255) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[Rx](
                      [CLNT_ST_CD] [varchar](250) NULL, 
                      [PRIMY_GRP_ID_CD] [varchar](250) NULL, 
                      [PRIMY_SUBGRP_ID_CD] [varchar](250) NULL, 
                      [SUBGRP_NAME] [varchar](250) NULL, 
                      [CLS_ID_CD] [varchar](250) NULL, 
                      [CLS_DESCN] [varchar](250) NULL, 
                      [CLS_PLN_ID_CD] [varchar](250) NULL, 
                      [CLS_PLN_DESCN] [varchar](250) NULL, 
                      [PROD_ID_CD] [varchar](250) NULL, 
                      [PROD_DESCN] [varchar](250) NULL, 
                      [CURR_CTG_PERS_KEY_CD] [varchar](250) NULL, 
                      [PRIMY_SUB_ID_CD] [varchar](250) NULL, 
                      [MBR_SFX_CD] [varchar](250) NULL, 
                      [PRIMY_MBR_ID_CD] [varchar](250) NULL, 
                      [MBR_FST_NAME] [varchar](250) NULL, 
                      [MBR_MID_NAME] [varchar](250) NULL, 
                      [MBR_LST_NAME] [varchar](250) NULL, 
                      [MBR_DOB_DT] [varchar](250) NULL, 
                      [MBR_GNDR_CD] [varchar](250) NULL, 
                      [MBR_RELSHP_CD] [varchar](250) NULL, 
                      [FMLY_STRCT_CD] [varchar](250) NULL, 
                      [SUB_CNTCT_POSTL_CD] [varchar](250) NULL, 
                      [MBR_POSTL_CD] [varchar](250) NULL, 
                      [PROD_TYP_CD] [varchar](250) NULL, 
                      [PROD_CAT_CD] [varchar](250) NULL, 
                      [CLM_ID_CD] [varchar](250) NULL, 
                      [CLI_NUM_CD] [varchar](250) NULL, 
                      [TO_CLAIM_ID] [varchar](250) NULL, 
                      [PROC_DT] [varchar](250) NULL, 
                      [RX_WRTTN_DT] [varchar](250) NULL, 
                      [CDM_RX_FILL_DT_KEY] [varchar](250) NULL, 
                      [RX_SVC_DT] [varchar](250) NULL, 
                      [CLM_PD_ADJST_CD] [varchar](250) NULL, 
                      [DIAG_CD_1] [varchar](250) NULL, 
                      [ICD_VRSN_CD] [varchar](250) NULL, 
                      [PRCDR_CD] [varchar](250) NULL, 
                      [SVC_TYP_CD] [varchar](250) NULL, 
                      [RPTG_CAT_CD] [varchar](250) NULL, 
                      [CLM_BILLG_TYP_CD] [varchar](250) NULL, 
                      [FLTR_FLAG_CD] [varchar](250) NULL, 
                      [POT_CD] [varchar](250) NULL, 
                      [OTH_PAYR_TYP_CD] [varchar](250) NULL, 
                      [INELIG_RSN_CD] [varchar](250) NULL, 
                      [ORIGN_MTHD_CD] [varchar](250) NULL, 
                      [DELV_PROV_NPI_ID_CD] [varchar](250) NULL, 
                      [DELV_PROV_ID_CD] [varchar](250) NULL, 
                      [DELV_PIMS_ID_CD] [varchar](250) NULL, 
                      [DELV_PROV_NAME] [varchar](250) NULL, 
                      [DELV_PROV_ADDR_LN_1_TXT] [varchar](250) NULL, 
                      [DELV_PROV_ADDR_LN_2_TXT] [varchar](250) NULL, 
                      [DELV_PROV_ADDR_LN_3_TXT] [varchar](250) NULL, 
                      [DELV_PROV_CITY_NAME] [varchar](250) NULL, 
                      [DELV_PROV_ST_CD] [varchar](250) NULL, 
                      [DELV_PROV_ZIP_CD] [varchar](250) NULL, 
                      [DELV_PRIMY_PROV_SPCLTY_CD] [varchar](250) NULL, 
                      [DELV_PROV_CAT_CD] [varchar](250) NULL, 
                      [DELV_PROV_TYP_CD] [varchar](250) NULL, 
                      [RX_PRSCRBNG_PHYS_DEA_ID_CD] [varchar](250) NULL, 
                      [RX_PRSCRBR_LAST_NAME] [varchar](250) NULL, 
                      [RX_PRSCRBR_PHYS_POSTL_CD] [varchar](250) NULL, 
                      [RX_PHARM_ID_CD] [varchar](250) NULL, 
                      [RX_ID_CD] [varchar](250) NULL, 
                      [RX_NBR] [varchar](250) NULL, 
                      [RX_NDC_ID_CD] [varchar](250) NULL, 
                      [DRUG_TYP_CD] [varchar](250) NULL, 
                      [DRUG_NAME] [varchar](250) NULL, 
                      [Drug_Strength] [varchar](250) NULL, 
                      [THRPTC_CLS] [varchar](250) NULL, 
                      [RX_GNRC_BRND_CD] [varchar](250) NULL, 
                      [SPEC_IND] [varchar](250) NULL, 
                      [CMPD_IND] [varchar](250) NULL, 
                      [RX_FRMLRY_DRUG_CD] [varchar](250) NULL, 
                      [FORM_TIER] [varchar](250) NULL, 
                      [RX_DRCT_MAIL_CD] [varchar](250) NULL, 
                      [RX_DAW_CD] [varchar](250) NULL, 
                      [RX_PRCG_CD] [varchar](250) NULL, 
                      [RX_UTLZTN_IND] [varchar](250) NULL, 
                      [RX_PAT_PD_AMT] [varchar](250) NULL, 
                      [NEW_RFILL_CNT] [varchar](250) NULL, 
                      [RX_QTY_PD_CNT] [varchar](250) NULL, 
                      [RX_DAYS_SPLY_CNT] [varchar](250) NULL, 
                      [CATZ_CASE_CNT] [varchar](250) NULL, 
                      [BILLD_CHRG_AMT] [varchar](250) NULL, 
                      [BILLD_COVD_AMT] [varchar](250) NULL, 
                      [RX_ALWD_AMT] [varchar](250) NULL, 
                      [RX_UCR_PD_AMT] [varchar](250) NULL, 
                      [PD_AMT] [varchar](250) NULL, 
                      [RX_APLD_DED_AMT] [varchar](250) NULL, 
                      [COIN_AMT] [varchar](250) NULL, 
                      [RX_COPAY_AMT] [varchar](250) NULL, 
                      [COB_SAVGS_AMT] [varchar](250) NULL, 
                      [RX_INGRDT_COST_PD_AMT] [varchar](250) NULL, 
                      [RX_DSPNSG_FEE_PD_AMT] [varchar](250) NULL, 
                      [RX_SALES_TAX_PD_AMT] [varchar](250) NULL, 
                      [INELIG_AMT] [varchar](250) NULL, 
                      [DISC_AMT] [varchar](250) NULL, 
                      [RX_APLD_OVR_MAX_AMT] [varchar](250) NULL, 
                      [RX_APLD_STPLS_AMT] [varchar](250) NULL, 
                      [OTH_PAYR_COVD_AMT] [varchar](250) NULL, 
                      [AVG_WHLSL_PRC] [varchar](250) NULL, 
                      [RX_ADMIN_FEE] [varchar](250) NULL, 
                      [rowhash] [varchar](32) NULL, 
                      [DMLDate] [datetime] NOT NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                    
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[stage_Enrollment](
                      [CLNT_ST_CD] [varchar](50) NULL, 
                      [PRIMY_GRP_ID_CD] [varchar](50) NULL, 
                      [PRIMY_SUBGRP_ID_CD] [varchar](50) NULL, 
                      [SUBGRP_NAME] [varchar](50) NULL, 
                      [CLS_ID_CD] [varchar](50) NULL, 
                      [CLS_DESCN] [varchar](50) NULL, 
                      [CLS_PLN_ID_CD] [varchar](50) NULL, 
                      [CLS_PLN_DESCN] [varchar](50) NULL, 
                      [PROD_ID_CD] [varchar](50) NULL, 
                      [PROD_DESCN] [varchar](250) NULL, 
                      [CURR_CTG_PERS_KEY_CD] [varchar](50) NULL, 
                      [PRIMY_SUB_ID_CD] [varchar](50) NULL, 
                      [MBR_SFX_CD] [varchar](50) NULL, 
                      [PRIMY_MBR_ID_CD] [varchar](50) NULL, 
                      [MBR_FST_NAME] [varchar](50) NULL, 
                      [MBR_MID_NAME] [varchar](50) NULL, 
                      [MBR_LST_NAME] [varchar](50) NULL, 
                      [MBR_DOB_DT_KEY] [varchar](50) NULL, 
                      [MBR_GNDR_CD] [varchar](50) NULL, 
                      [MBR_RELSHP_CD] [varchar](50) NULL, 
                      [FMLY_STRCT_CD] [varchar](50) NULL, 
                      [SUB_ADDR_LN_1_TXT] [varchar](50) NULL, 
                      [SUB_ADDR_LN_2_TXT] [varchar](50) NULL, 
                      [SUB_ADDR_LN_3_TXT] [varchar](50) NULL, 
                      [SUB_CITY_NAME] [varchar](50) NULL, 
                      [SUB_ST_CD] [varchar](50) NULL, 
                      [SUB_CNTCT_POSTL_CD] [varchar](50) NULL, 
                      [MBR_POSTL_CD] [varchar](50) NULL, 
                      [MBR_PH_NUM_TXT] [varchar](50) NULL, 
                      [PROD_TYP_CD] [varchar](50) NULL, 
                      [PROD_CAT_CD] [varchar](50) NULL, 
                      [CDM_REC_EFF_DT_KEY] [varchar](50) NULL, 
                      [CDM_REC_CNCL_DT_KEY] [varchar](50) NULL, 
                      [WHOLE_CONTR_CNT] [varchar](50) NULL, 
                      [WHOLE_MBR_CNT] [varchar](50) NULL, 
                      [rowhash] [varchar](32) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[stage_Medical](
                      [CLNT_ST_CD] [varchar](50) NULL, 
                      [PRIMY_GRP_ID_CD] [varchar](50) NULL, 
                      [PRIMY_SUBGRP_ID_CD] [varchar](50) NULL, 
                      [SUBGRP_NAME] [varchar](50) NULL, 
                      [CLS_ID_CD] [varchar](50) NULL, 
                      [CLS_DESCN] [varchar](50) NULL, 
                      [CLS_PLN_ID_CD] [varchar](50) NULL, 
                      [CLS_PLN_DESCN] [varchar](50) NULL, 
                      [PROD_ID_CD] [varchar](50) NULL, 
                      [PROD_DESCN] [varchar](250) NULL, 
                      [CURR_CTG_PERS_KEY_CD] [varchar](50) NULL, 
                      [PRIMY_SUB_ID_CD] [varchar](50) NULL, 
                      [MBR_SFX_CD] [varchar](50) NULL, 
                      [PRIMY_MBR_ID_CD] [varchar](50) NULL, 
                      [MBR_FST_NAME] [varchar](50) NULL, 
                      [MBR_MID_NAME] [varchar](50) NULL, 
                      [MBR_LST_NAME] [varchar](50) NULL, 
                      [MBR_DOB_DT] [varchar](50) NULL, 
                      [MBR_GNDR_CD] [varchar](50) NULL, 
                      [MBR_RELSHP_CD] [varchar](50) NULL, 
                      [FMLY_STRCT_CD] [varchar](50) NULL, 
                      [SUB_CNTCT_POSTL_CD] [varchar](50) NULL, 
                      [MBR_POSTL_CD] [varchar](50) NULL, 
                      [PROD_TYP_CD] [varchar](50) NULL, 
                      [PROD_CAT_CD] [varchar](50) NULL, 
                      [CLM_ID_CD] [varchar](50) NULL, 
                      [CLI_NUM_CD] [varchar](50) NULL, 
                      [TO_CLAIM_ID] [varchar](50) NULL, 
                      [PROC_DT] [varchar](50) NULL, 
                      [SVC_FROM_DT] [varchar](50) NULL, 
                      [SVC_TO_DT] [varchar](50) NULL, 
                      [ADMT_DT] [varchar](50) NULL, 
                      [DSCHRG_DT] [varchar](50) NULL, 
                      [CLM_PD_ADJST_CD] [varchar](50) NULL, 
                      [NTWK_AREA_IND] [varchar](50) NULL, 
                      [SVCG_PROV_IN_NTWK_CD] [varchar](50) NULL, 
                      [DIAG_CD_1] [varchar](50) NULL, 
                      [DIAG_CD_2] [varchar](50) NULL, 
                      [DIAG_CD_3] [varchar](50) NULL, 
                      [DIAG_CD_4] [varchar](50) NULL, 
                      [DIAG_CD_5] [varchar](50) NULL, 
                      [ICD_PRCDR_CD_1] [varchar](50) NULL, 
                      [ICD_PRCDR_CD_2] [varchar](50) NULL, 
                      [ICD_PRCDR_CD_3] [varchar](50) NULL, 
                      [ICD_PRCDR_CD_4] [varchar](50) NULL, 
                      [ICD_VRSN_CD] [varchar](50) NULL, 
                      [BNDLD_HCPCS_CPT_CD] [varchar](50) NULL, 
                      [HCPCS_CPT_CD] [varchar](50) NULL, 
                      [HCPCS_CPT_MODR_1_TXT] [varchar](50) NULL, 
                      [HCPCS_CPT_MODR_2_TXT] [varchar](50) NULL, 
                      [HCPCS_CPT_MODR_3_TXT] [varchar](50) NULL, 
                      [HCPCS_CPT_MODR_4_TXT] [varchar](50) NULL, 
                      [RVNU_CD] [varchar](50) NULL, 
                      [PRCDR_CD] [varchar](50) NULL, 
                      [DRG_ID_CD] [varchar](50) NULL, 
                      [SVC_TYP_CD] [varchar](50) NULL, 
                      [RPTG_CAT_CD] [varchar](50) NULL, 
                      [CLM_FILING_CD] [varchar](50) NULL, 
                      [CLM_BILLG_TYP_CD] [varchar](50) NULL, 
                      [FLTR_FLAG_CD] [varchar](50) NULL, 
                      [POT_CD] [varchar](50) NULL, 
                      [DISCHG_STAT_CD] [varchar](50) NULL, 
                      [ADM_TYP_CD] [varchar](50) NULL, 
                      [ADM_SRC_CD] [varchar](50) NULL, 
                      [OTH_PAYR_TYP_CD] [varchar](50) NULL, 
                      [INELIG_RSN_CD] [varchar](50) NULL, 
                      [Prior_Authorization_Code] [varchar](50) NULL, 
                      [MBR_PCP_IND] [varchar](50) NULL, 
                      [DELV_PROV_TAX_ID_CD] [varchar](50) NULL, 
                      [DELV_PROV_NPI_ID_CD] [varchar](50) NULL, 
                      [DELV_PROV_ID_CD] [varchar](50) NULL, 
                      [DELV_PIMS_ID_CD] [varchar](50) NULL, 
                      [DELV_PROV_NAME] [varchar](50) NULL, 
                      [DELV_PROV_ADDR_LN_1_TXT] [varchar](50) NULL, 
                      [DELV_PROV_ADDR_LN_2_TXT] [varchar](50) NULL, 
                      [DELV_PROV_ADDR_LN_3_TXT] [varchar](50) NULL, 
                      [DELV_PROV_CITY_NAME] [varchar](50) NULL, 
                      [DELV_PROV_ST_CD] [varchar](50) NULL, 
                      [DELV_PROV_ZIP_CD] [varchar](50) NULL, 
                      [DELV_PRIMY_PROV_SPCLTY_CD] [varchar](50) NULL, 
                      [DELV_PROV_CAT_CD] [varchar](50) NULL, 
                      [DELV_PROV_TYP_CD] [varchar](50) NULL, 
                      [REFRNG_PROV_TAX_ID_CD] [varchar](50) NULL, 
                      [REFERRING PROVIDER NAME] [varchar](50) NULL, 
                      [REFRL_IND] [varchar](50) NULL, 
                      [PROV_RELSHP_TYP_CD] [varchar](50) NULL, 
                      [HOSP_DAY_CNT] [varchar](50) NULL, 
                      [CATZ_CASE_CNT] [varchar](50) NULL, 
                      [BILLD_CHRG_AMT] [varchar](50) NULL, 
                      [BILLD_COVD_AMT] [varchar](50) NULL, 
                      [PROV_ALWD_AMT] [varchar](50) NULL, 
                      [PD_WO_ITS_AMT] [varchar](50) NULL, 
                      [PD_AMT] [varchar](50) NULL, 
                      [DED_AMT] [varchar](50) NULL, 
                      [COIN_AMT] [varchar](50) NULL, 
                      [COPAYMT_AMT] [varchar](50) NULL, 
                      [COB_SAVGS_AMT] [varchar](50) NULL, 
                      [ITS_ACC_FEE_AMT] [varchar](50) NULL, 
                      [ITS_SURCHRG_AMT] [varchar](50) NULL, 
                      [INELIG_AMT] [varchar](50) NULL, 
                      [DISC_AMT] [varchar](50) NULL, 
                      [RSK_WTHD_AMT] [varchar](50) NULL, 
                      [OTH_PAYR_COVD_AMT] [varchar](50) NULL, 
                      [rowhash] [varchar](32) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[stage_Rx](
                      [CLNT_ST_CD] [varchar](250) NULL, 
                      [PRIMY_GRP_ID_CD] [varchar](250) NULL, 
                      [PRIMY_SUBGRP_ID_CD] [varchar](250) NULL, 
                      [SUBGRP_NAME] [varchar](250) NULL, 
                      [CLS_ID_CD] [varchar](250) NULL, 
                      [CLS_DESCN] [varchar](250) NULL, 
                      [CLS_PLN_ID_CD] [varchar](250) NULL, 
                      [CLS_PLN_DESCN] [varchar](250) NULL, 
                      [PROD_ID_CD] [varchar](250) NULL, 
                      [PROD_DESCN] [varchar](250) NULL, 
                      [CURR_CTG_PERS_KEY_CD] [varchar](250) NULL, 
                      [PRIMY_SUB_ID_CD] [varchar](250) NULL, 
                      [MBR_SFX_CD] [varchar](250) NULL, 
                      [PRIMY_MBR_ID_CD] [varchar](250) NULL, 
                      [MBR_FST_NAME] [varchar](250) NULL, 
                      [MBR_MID_NAME] [varchar](250) NULL, 
                      [MBR_LST_NAME] [varchar](250) NULL, 
                      [MBR_DOB_DT] [varchar](250) NULL, 
                      [MBR_GNDR_CD] [varchar](250) NULL, 
                      [MBR_RELSHP_CD] [varchar](250) NULL, 
                      [FMLY_STRCT_CD] [varchar](250) NULL, 
                      [SUB_CNTCT_POSTL_CD] [varchar](250) NULL, 
                      [MBR_POSTL_CD] [varchar](250) NULL, 
                      [PROD_TYP_CD] [varchar](250) NULL, 
                      [PROD_CAT_CD] [varchar](250) NULL, 
                      [CLM_ID_CD] [varchar](250) NULL, 
                      [CLI_NUM_CD] [varchar](250) NULL, 
                      [TO_CLAIM_ID] [varchar](250) NULL, 
                      [PROC_DT] [varchar](250) NULL, 
                      [RX_WRTTN_DT] [varchar](250) NULL, 
                      [CDM_RX_FILL_DT_KEY] [varchar](250) NULL, 
                      [RX_SVC_DT] [varchar](250) NULL, 
                      [CLM_PD_ADJST_CD] [varchar](250) NULL, 
                      [DIAG_CD_1] [varchar](250) NULL, 
                      [ICD_VRSN_CD] [varchar](250) NULL, 
                      [PRCDR_CD] [varchar](250) NULL, 
                      [SVC_TYP_CD] [varchar](250) NULL, 
                      [RPTG_CAT_CD] [varchar](250) NULL, 
                      [CLM_BILLG_TYP_CD] [varchar](250) NULL, 
                      [FLTR_FLAG_CD] [varchar](250) NULL, 
                      [POT_CD] [varchar](250) NULL, 
                      [OTH_PAYR_TYP_CD] [varchar](250) NULL, 
                      [INELIG_RSN_CD] [varchar](250) NULL, 
                      [ORIGN_MTHD_CD] [varchar](250) NULL, 
                      [DELV_PROV_NPI_ID_CD] [varchar](250) NULL, 
                      [DELV_PROV_ID_CD] [varchar](250) NULL, 
                      [DELV_PIMS_ID_CD] [varchar](250) NULL, 
                      [DELV_PROV_NAME] [varchar](250) NULL, 
                      [DELV_PROV_ADDR_LN_1_TXT] [varchar](250) NULL, 
                      [DELV_PROV_ADDR_LN_2_TXT] [varchar](250) NULL, 
                      [DELV_PROV_ADDR_LN_3_TXT] [varchar](250) NULL, 
                      [DELV_PROV_CITY_NAME] [varchar](250) NULL, 
                      [DELV_PROV_ST_CD] [varchar](250) NULL, 
                      [DELV_PROV_ZIP_CD] [varchar](250) NULL, 
                      [DELV_PRIMY_PROV_SPCLTY_CD] [varchar](250) NULL, 
                      [DELV_PROV_CAT_CD] [varchar](250) NULL, 
                      [DELV_PROV_TYP_CD] [varchar](250) NULL, 
                      [RX_PRSCRBNG_PHYS_DEA_ID_CD] [varchar](250) NULL, 
                      [RX_PRSCRBR_LAST_NAME] [varchar](250) NULL, 
                      [RX_PRSCRBR_PHYS_POSTL_CD] [varchar](250) NULL, 
                      [RX_PHARM_ID_CD] [varchar](250) NULL, 
                      [RX_ID_CD] [varchar](250) NULL, 
                      [RX_NBR] [varchar](250) NULL, 
                      [RX_NDC_ID_CD] [varchar](250) NULL, 
                      [DRUG_TYP_CD] [varchar](250) NULL, 
                      [DRUG_NAME] [varchar](250) NULL, 
                      [Drug_Strength] [varchar](250) NULL, 
                      [THRPTC_CLS] [varchar](250) NULL, 
                      [RX_GNRC_BRND_CD] [varchar](250) NULL, 
                      [SPEC_IND] [varchar](250) NULL, 
                      [CMPD_IND] [varchar](250) NULL, 
                      [RX_FRMLRY_DRUG_CD] [varchar](250) NULL, 
                      [FORM_TIER] [varchar](250) NULL, 
                      [RX_DRCT_MAIL_CD] [varchar](250) NULL, 
                      [RX_DAW_CD] [varchar](250) NULL, 
                      [RX_PRCG_CD] [varchar](250) NULL, 
                      [RX_UTLZTN_IND] [varchar](250) NULL, 
                      [RX_PAT_PD_AMT] [varchar](250) NULL, 
                      [NEW_RFILL_CNT] [varchar](250) NULL, 
                      [RX_QTY_PD_CNT] [varchar](250) NULL, 
                      [RX_DAYS_SPLY_CNT] [varchar](250) NULL, 
                      [CATZ_CASE_CNT] [varchar](250) NULL, 
                      [BILLD_CHRG_AMT] [varchar](250) NULL, 
                      [BILLD_COVD_AMT] [varchar](250) NULL, 
                      [RX_ALWD_AMT] [varchar](250) NULL, 
                      [RX_UCR_PD_AMT] [varchar](250) NULL, 
                      [PD_AMT] [varchar](250) NULL, 
                      [RX_APLD_DED_AMT] [varchar](250) NULL, 
                      [COIN_AMT] [varchar](250) NULL, 
                      [RX_COPAY_AMT] [varchar](250) NULL, 
                      [COB_SAVGS_AMT] [varchar](250) NULL, 
                      [RX_INGRDT_COST_PD_AMT] [varchar](250) NULL, 
                      [RX_DSPNSG_FEE_PD_AMT] [varchar](250) NULL, 
                      [RX_SALES_TAX_PD_AMT] [varchar](250) NULL, 
                      [INELIG_AMT] [varchar](250) NULL, 
                      [DISC_AMT] [varchar](250) NULL, 
                      [RX_APLD_OVR_MAX_AMT] [varchar](250) NULL, 
                      [RX_APLD_STPLS_AMT] [varchar](250) NULL, 
                      [OTH_PAYR_COVD_AMT] [varchar](250) NULL, 
                      [AVG_WHLSL_PRC] [varchar](250) NULL, 
                      [RX_ADMIN_FEE] [varchar](250) NULL, 
                      [rowhash] [varchar](32) NULL
                    ) ON [PRIMARY] GO 
                  </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Schema  legacy_Enrollment">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
                  ALTER TABLE 
                    [dbo].[legacy_Enrollment] 
                  ADD 
                    DEFAULT (
                      getdate()
                    ) FOR [DMLDate] GO 
                  ALTER TABLE 
                    [dbo].[legacy_Medical] 
                  ADD 
                    DEFAULT (
                      getdate()
                    ) FOR [DMLDate] GO 
                  ALTER TABLE 
                    [dbo].[legacy_Rx] 
                  ADD 
                    DEFAULT (
                      getdate()
                    ) FOR [DMLDate] GO
                  
                </code></pre>

            </div>

            <div class="Pre-2016-ICD9 Schema RXClaimInsert_legacy">
                <h2 title="ETL Module">ETL</h2>
                <pre><code>
              USE [blindedclients_mdm] GO 
              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclients RXClaimInsert_legacy] as begin 
              set 
                nocount on;
              insert into interasmdm_n.dbo.ndc (ndcnumber, ndcname) 
              select 
                distinct ltrim(
                  rtrim(rx1.ndc)
                ), 
                ltrim(
                  rtrim(rx1.drugname)
                ) 
              from 
                (
                  select 
                    ndc, 
                    max(drugname) as drugname 
                  from 
                    blindedclients_mdm.dbo.legacy_rx 
                  group by 
                    ndc
                ) as rx1 
                left join interasmdm_n.dbo.ndc as rx2 on ltrim(
                  rtrim(rx1.ndc)
                ) = rx2.ndcnumber 
              where 
                rx2.ndcnumber is null if object_id(
                  '#regencerxclaiminserttable', 'u'
                ) is not null begin 
              drop 
                table end;
              </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
              with as (
                select 
                  distinct coalesce(
                    mem.memberid, 
                    case when rx.groupid = '46736' then -3 when rx.groupid = '33927' then -4 when rx.groupid = '33928' then -4 when rx.groupid = '54705' then -4 when rx.groupid = '807441500' then -4 when rx.groupid = '33731' then -6 when cast(rx.groupid as int) = '48233001' then -6 when rx.groupid = '51313' then -8 when rx.groupid = '51525' then -13 when rx.groupid = '51584' then -12 when rx.groupid = '26447' then -20 when rx.groupid = '54146' then -25 when left(
                      cast(rx.primarygroupid as int), 
                      2
                    ) = '96' then -15 when left(
                      cast(rx.primarygroupid as int), 
                      2
                    ) = '68' then -26 end
                  ) as [memberid], 
                  concat(
                    ltrim(
                      rtrim(rx.claimkey)
                    ), 
                    ltrim(
                      rtrim(rx.sequencenumber)
                    )
                  ) as [rxclaimnumber], 
                  '' as [writtendate], 
                  case when rx.filldate = 0 then '' else cast(
                    cast(
                      rx.filldate as varchar(10)
                    ) as date
                  ) end as [filleddate], 
                  case when rx.paiddate = 0 then '' else cast(
                    cast(
                      rx.paiddate as varchar(10)
                    ) as date
                  ) end as [paiddate], 
                  coalesce(ndc.ndcid,-1) as [ndcid], 
                  -1 as [pharmacyid], 
                  -1 as [providerid], 
                  case when cast(
                    cast(rx.refillcount as int) as varchar(15)
                  ) = 0 then 0 else 1 end as [newrefillcode], 
                  cast(
                    rx.dawcode as varchar(15)
                  ) as [dawcode], 
                  null as [compoundflag], 
                  null as [formularyflag], 
                  null as [rxtier], 
                  -1 as [drugtypeid], 
                  cast(rx.dispensedquantity as int) as [metricquantity], 
                  case when rx.submittedamount = 0 then cast(
                    replace(rx.dayssupply, '-', '') as int
                  )*-1 else cast(rx.dayssupply as int) end as [daysupply], 
                  cast(rx.submittedamount as money) as [billedamount], 
                  cast(rx.paidamount as money) as [paidamount], 
                  cast(rx.copaymentamount as money) as [copayamount], 
                  cast(rx.deductibleamount as money) as [deductibleamount], 
                  cast(rx.coinsuranceamount as money) as [coinsuranceamount], 
                  cast(rx.ingredientcost as money) as [ingredientcost], 
                  cast(rx.disensingfee as money) as [dispensingfee], 
                  cast(rx.salestax as money) as [taxamount], 
                  0 as [hraamount], 
                  ltrim(
                    rtrim(rx.claimdetailfactkey)
                  ) as [sourcerecordid] 
                from 
                  blindedclients_mdm.dbo.legacy_rx as rx 
                  left join interasmdm_n.dbo.ndc ndc on ltrim(
                    rtrim(rx.ndc)
                  ) = ndc.ndcnumber 
                  left join (
                    select 
                      max(memberid) as memberid, 
                      sourcerecordid, 
                      companyid 
                    from 
                      interasmdm_n.dbo.member 
                    group by 
                      sourcerecordid, 
                      companyid
                  ) as mem on concat(
                    ltrim(
                      rtrim(rx.CTGKey)
                    ), 
                    '-', 
                    rx.primarygroupid
                  ) = mem.sourcerecordid 
                  and mem.companyid in (3, 4, 6, 8, 12, 13, 15, 20, 25, 26) 
                  left join interasmdm_n.dbo.rxclaim rxc on ltrim(
                    rtrim(rx.claimdetailfactkey)
                  ) = rxc.sourcerecordid 
                  and rxc.sourcerecordid is not null 
                where 
                  rxc.rxclaimid is null 
                  and rx.groupid = '46996'
              ) 
              select 
                * into 
              from 
                insert into interasmdm_n.[dbo].[rxclaim] (
                  [memberid], [rxclaimnumber], [writtendate], 
                  [filleddate], [paiddate], [ndcid], 
                  [pharmacyid], [providerid], [newrefillcode], 
                  [dawcode], [compoundflag], [formularyflag], 
                  [rxtier], [drugtypeid], [metricquantity], 
                  [daysupply], [billedamount], [paidamount], 
                  [copayamount], [deductibleamount], 
                  [coinsuranceamount], [ingredientcost], 
                  [dispensingfee], [taxamount], [hraamount], 
                  [sourcerecordid]
                ) 
              select 
                * 
              from 
              drop 
                table end GO 
              </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclients_mdmAuto] as begin 
              set 
                nocount on;
              declare @error as varchar(max) declare @errorbreak as int 
              set 
                @errorbreak = 0 begin transaction regencefirstouter begin transaction regenceexecutables;
              while (@errorbreak != 1) begin begin try execute blindedclients_mdm.dbo.regencememberupdate end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regencememberinsert;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regenceenrollmentinsert;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.RegenceCoverageMonthInsert;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regenceproviderinsert;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regencemedicalclaiminsert;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regencerxclaiminsert;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch 
              set 
                @errorbreak = 1 end if @error is null begin commit transaction regenceexecutables;
              declare @error3 nvarchar(1000) = N 'successful automated process for lithia on ' + cast(
                getdate() as varchar(255)
              ) declare @error4 nvarchar(1000) = N 'successful automated process for tillamook on ' + cast(
                getdate() as varchar(255)
              ) declare @error6 nvarchar(1000) = N 'successful automated process for campbell on ' + cast(
                getdate() as varchar(255)
              ) declare @error13 nvarchar(1000) = N 'successful automated process for The Oregonm Clinic on ' + cast(
                getdate() as varchar(255)
              ) declare @error20 nvarchar(1000) = N 'successful automated process for Willamette Dental on ' + cast(
                getdate() as varchar(255)
              ) declare @error25 nvarchar(1000) = N 'successful automated process for The Salem Clinic on ' + cast(
                getdate() as varchar(255)
              ) declare @error26 nvarchar(1000) = N 'successful automated process for SDIS on ' + cast(
                getdate() as varchar(255)
              ) declare @error27 nvarchar(1000) = N 'successful automated process for Columbia River Processing  on ' + cast(
                getdate() as varchar(255)
              ) declare @error30 nvarchar(1000) = N 'successful automated process for he Vancouver Clinic on ' + cast(
                getdate() as varchar(255)
              ) execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error3, 
              3 execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error4, 
              4 execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error6, 
              6 execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error13, 
              13 execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error20, 
              20 execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error25, 
              25 execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error26, 
              26 execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error27, 
              27 execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error30, 
              30 commit transaction regencefirstouter;
              return 0;
              end else begin try while @@trancount > 0 rollback execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              15 execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              3 execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              4 execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              6 execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              13 execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              20 execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              25 execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              26 execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              27 execute etlaudit.dbo.audittransaction 1005, 
              1295, 
              1293, 
              @error, 
              30 commit transaction regencefirstouter return 1;
              end try begin catch end catch end GO 
            </code></pre>
            </div>
            <div class="Pre-2016-ICD9 Eligibility-Stage">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclients_mdmAuto_legacy] as begin 
              set 
                nocount on;
              declare @error as varchar(max) declare @errorbreak as int 
              set 
                @errorbreak = 0 begin transaction regencefirstouter begin transaction regenceexecutables;
              while (@errorbreak != 1) begin begin try execute blindedclients_mdm.dbo.regencememberupdate_legacy end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regencememberinsert_legacy;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regenceenrollmentinsert_legacy;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regencecoveragemonthinsert_legacy;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regenceproviderinsert_legacy;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regencemedicalclaiminsert_legacy;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch begin try execute blindedclients_mdm.dbo.regencerxclaiminsert_legacy;
              end try begin catch if(@@error = 0) begin 
              set 
                @error = concat(
                  error_number(), 
                  '-', 
                  error_severity(), 
                  '-', 
                  error_state(), 
                  '-', 
                  error_procedure(), 
                  '-', 
                  error_line(), 
                  '-', 
                  error_message(), 
                  '- error time: ', 
                  cast(
                    getdate() as varchar(255)
                  )
                ) save transaction regenceexecutables;
              rollback transaction regenceexecutables;
              set 
                @errorbreak = 1 end end catch 
              set 
                @errorbreak = 1 end if @error is null begin commit transaction regenceexecutables;
              set 
                @error = 'successful automated process on ' + cast(
                  getdate() as varchar(255)
                ) execute etlaudit.dbo.audittransaction 1006, 
                1295, 
                1293, 
                @error, 
                15 commit transaction regencefirstouter;
              execute interasmdm_n.dbo.rebuildindexes return 0;
              end else begin try while @@trancount > 0 rollback execute etlaudit.dbo.audittransaction 1006, 
              1295, 
              1293, 
              @error, 
              15 commit transaction regencefirstouter return 1;
              end try begin catch end catch end GO 
            </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsCoverageMonthInsert] as begin 
              set 
                nocount on;
              if object_id(
                '#regencecoveragemonthinserttable', 
                'u'
              ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct enr.memberid as [memberid], 
                  enr.enrollmentid as [enrollmentid], 
                  cvd.coveragedate as [coveragedate], 
                  current_timestamp as [dmldate], 
                  system_user as [lastuser] 
                from 
                  interasmdm_n.dbo.enrollment as enr 
                  left join interasmdm_n.dbo.coveragedates as cvd on year(cvd.coveragedate) * 100 + month(cvd.coveragedate) between (
                    year(effectivedate) * 100 + month(effectivedate)
                  ) 
                  and (
                    year(
                      dateadd(day,-1, terminationdate)
                    ) * 100 + month(
                      dateadd(day,-1, terminationdate)
                    )
                  ) 
                  left join interasmdm_n.dbo.coveragemonth as cvm on enr.enrollmentid = cvm.enrollmentid 
                  and cvd.coveragedate = cvm.coveragedate 
                where 
                  cvd.coveragedate between '2012-01-01' 
                  and convert(
                    varchar(10), 
                    dateadd(
                      dd, 
                      -(
                        day(
                          getdate()
                        )-1
                      ), 
                      getdate()
                    ), 
                    121
                  ) 
                  and cvm.coveragemonthid is null 
                  and enr.memberid in (
                    select 
                      memberid 
                    from 
                      interasmdm_n.dbo.member 
                    where 
                      companyid in(3, 4, 8, 12, 13, 15, 20, 25, 26, 27, 30)
                  )
              ) 
              select 
                * into 
              from 
                insert into interasmdm_n.dbo.coveragemonth (
                  [enrollmentid], [coveragedate], [dmldate], 
                  [lastuser], [memberid]
                ) 
              select 
                [enrollmentid], 
                [coveragedate], 
                [dmldate], 
                [lastuser], 
                [memberid] 
              from 
              drop 
                table end GO 
              </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsEnrollmentInsert] as begin 
              set 
                nocount on;
              delete from 
                [interasmdm_n].[dbo].[coveragemonth] 
              where 
                memberid in (
                  select 
                    distinct memberid 
                  from 
                    [interasmdm_n].[dbo].[member] 
                  where 
                    companyid in (3, 4, 8, 12, 13, 15, 20, 25, 26, 27, 30)
                ) 
              delete from 
                [interasmdm_n].[dbo].[enrollment] 
              where 
                memberid in (
                  select 
                    memberid 
                  from 
                    [interasmdm_n].[dbo].[member] 
                  where 
                    companyid in (3, 4, 8, 12, 13, 15, 20, 25, 26, 27, 30)
                ) 
                and effectivedate > '2015-09-01' if object_id(
                  'tempdb..#regenceenrollmentinsert'
                ) is not null begin 
              drop 
                table 
              select 
                * into 
              from 
                (
                  select 
                    distinct coalesce(
                      mem.memberid, 
                      case when enr.[PRIMY_GRP_ID_CD] = '10012785' then -3 when enr.[PRIMY_GRP_ID_CD] = '63000000' then -4 when enr.[PRIMY_GRP_ID_CD] = '10007440' then -6 when enr.[PRIMY_GRP_ID_CD] = '10015894' then -13 when enr.[PRIMY_GRP_ID_CD] = '10002156' then -20 when enr.[PRIMY_GRP_ID_CD] = '10017746' then -25 when left(enr.[PRIMY_GRP_ID_CD], 2) = '68' then -26 when enr.[PRIMY_GRP_ID_CD] = '63000002' then -27 when enr.[PRIMY_GRP_ID_CD] = '63000001' then -27 when enr.[PRIMY_GRP_ID_CD] = '10019108' then -30 end
                    ) as [memberid], 
                    case [PROD_CAT_CD] when 'm' then 1 when 'r' then 0 when 'd' then 2 when 'v' then 3 else -1 end as [coveragetypeid], 
                    -1 as [coveragetierid], 
                    1 as enrollmentstatusid, 
                    cast(
                      cast(
                        enr.[CDM_REC_EFF_DT_KEY] as varchar(10)
                      ) as date
                    ) as [effectivedate], 
                    case when cast(
                      cast(
                        enr.[CDM_REC_CNCL_DT_KEY] as varchar(10)
                      ) as date
                    ) = enrco.MaxCompanyDate 
                    and enr.[PRIMY_GRP_ID_CD] = '10007440' then '2199-12-31' else cast(
                      cast(
                        enr.[CDM_REC_CNCL_DT_KEY] as varchar(10)
                      ) as date
                    ) end as [terminationdate], 
                    enr.[CLS_PLN_DESCN] as [coveragename], 
                    enr.[PROD_DESCN] as [planname], 
                    enr.[CLS_DESCN] as [locationname], 
                    enr.[CLS_DESCN] as [departmentname], 
                    enr.DistinctMember as [idcardvalue], 
                    enr.[CURR_CTG_PERS_KEY_CD] as [alternateid], 
                    current_timestamp as [dmldate], 
                    system_user as [lastuser], 
                    enr.DistinctMember as [sourcerecordid] 
                  from 
                    (
                      select 
                        [PRIMY_GRP_ID_CD], 
                        [PROD_CAT_CD], 
                        [FMLY_STRCT_CD], 
                        en1.[CDM_REC_EFF_DT_KEY], 
                        [CDM_REC_CNCL_DT_KEY], 
                        [CLS_PLN_ID_CD], 
                        [CLS_DESCN], 
                        [CLS_PLN_DESCN], 
                        [PROD_ID_CD], 
                        [PROD_DESCN], 
                        [CURR_CTG_PERS_KEY_CD], 
                        concat(
                          ltrim(
                            rtrim(en1.CURR_CTG_PERS_KEY_CD)
                          ), 
                          '-', 
                          en1.[PRIMY_GRP_ID_CD]
                        ) as DistinctMember, 
                        DMLDate 
                      from 
                        blindedclients_mdm.dbo.enrollment en1 
                        join (
                          select 
                            [CDM_REC_EFF_DT_KEY], 
                            concat(
                              ltrim(
                                rtrim(CURR_CTG_PERS_KEY_CD)
                              ), 
                              '-', 
                              [PRIMY_GRP_ID_CD]
                            ) as distinctmember, 
                            max(dmldate) as maxdate 
                          from 
                            blindedclients_mdm.dbo.enrollment 
                          where 
                            [PROD_CAT_CD] in ('m') 
                          group by 
                            [CDM_REC_EFF_DT_KEY], 
                            concat(
                              ltrim(
                                rtrim(CURR_CTG_PERS_KEY_CD)
                              ), 
                              '-', 
                              [PRIMY_GRP_ID_CD]
                            )
                        ) as en2 on en1.[CDM_REC_EFF_DT_KEY] = en2.[CDM_REC_EFF_DT_KEY] 
                        and concat(
                          ltrim(
                            rtrim(en1.CURR_CTG_PERS_KEY_CD)
                          ), 
                          '-', 
                          en1.[PRIMY_GRP_ID_CD]
                        ) = en2.distinctmember 
                        and en1.dmldate = en2.maxdate 
                      where 
                        en1.[PROD_CAT_CD] in ('m')
                    ) as enr 
                    left join (
                      select 
                        max(memberid) as memberid, 
                        sourcerecordid, 
                        CompanyID as Companyid 
                      from 
                        interasmdm_n.dbo.member 
                      where 
                        companyid in (3, 4, 8, 13, 12, 15, 20, 25, 26, 27, 30) 
                      group by 
                        sourcerecordid, 
                        CompanyID
                    ) as mem on enr.DistinctMember = mem.sourcerecordid 
                    and mem.companyid in (3, 4, 8, 13, 12, 15, 20, 25, 26, 27, 30) 
                    join (
                      select 
                        distinct case when left([PRIMY_GRP_ID_CD], 2) = 68 then left([PRIMY_GRP_ID_CD], 2) when left([PRIMY_GRP_ID_CD], 2) = 63 then left([PRIMY_GRP_ID_CD], 2) else [PRIMY_GRP_ID_CD] end as [PRIMY_GRP_ID_CD], 
                        max(
                          cast(
                            cast(
                              [CDM_REC_CNCL_DT_KEY] as varchar(10)
                            ) as date
                          )
                        ) as MaxCompanyDate 
                      from 
                        blindedclients_mdm.dbo.enrollment 
                      group by 
                        case when left([PRIMY_GRP_ID_CD], 2) = 68 then left([PRIMY_GRP_ID_CD], 2) when left([PRIMY_GRP_ID_CD], 2) = 63 then left([PRIMY_GRP_ID_CD], 2) else [PRIMY_GRP_ID_CD] end
                    ) enrco on case when left(enr.[PRIMY_GRP_ID_CD], 2) = 68 then left(enr.[PRIMY_GRP_ID_CD], 2) when left(enr.[PRIMY_GRP_ID_CD], 2) = 63 then left(enr.[PRIMY_GRP_ID_CD], 2) else enr.[PRIMY_GRP_ID_CD] end = enrco.[PRIMY_GRP_ID_CD] 
                  where 
                    enr.[PROD_CAT_CD] in ('m') 
                    AND enr.[PRIMY_GRP_ID_CD] = '10007440'
                ) a insert into [interasmdm_n].[dbo].[enrollment] (
                  [memberid], [coveragetypeid], [coveragetierid], 
                  [enrollmentstatusid], [effectivedate], 
                  [terminationdate], [coveragename], 
                  [planname], [locationname], [departmentname], 
                  [idcardvalue], [alternateid], [dmldate], 
                  [lastuser], [sourcerecordid]
                ) 
              select 
                distinct [memberid], 
                [coveragetypeid], 
                [coveragetierid], 
                [enrollmentstatusid], 
                [effectivedate], 
                [terminationdate], 
                [coveragename], 
                [planname], 
                [locationname], 
                [departmentname], 
                [idcardvalue], 
                [alternateid], 
                [dmldate], 
                [lastuser], 
                [sourcerecordid] 
              from 
              drop 
                table end GO 
              </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
              
                SET 
              
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsEnrollmentInsert_legacy] as begin 
              set 
                nocount on;
              if object_id('#regenceenrollmenttable', 'u') is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct coalesce(
                    mem.memberid, 
                    case when enr.groupid = '46736' then -3 when enr.groupid = '33927' then -4 when enr.groupid = '33928' then -4 when enr.groupid = '54705' then -4 when enr.groupid = '33731' then -6 when enr.groupid = '51313' then -8 when enr.groupid = '51584' then -12 when enr.groupid = '51525' then -13 when enr.groupid = '26447' then -20 when enr.groupid = '54146' then -25 when left(primarygroupid, 2) = '96' then -15 when left(primarygroupid, 2) = '68' then -26 when enr.groupid = '54705' then -27 end
                  ) as [memberid], 
                  case productcategorycode when 'm' then 1 when 'r' then 0 when 'd' then 2 when 'v' then 3 else -1 end as [coveragetypeid], 
                  -1 as [coveragetierid], 
                  1 as enrollmentstatusid, 
                  cast(
                    cast(
                      enr.effectivedate as varchar(10)
                    ) as date
                  ) as [effectivedate], 
                  cast(
                    cast(
                      enr.cancelleddate as varchar(10)
                    ) as date
                  ) as [terminationdate], 
                  enr.classplandescription as [coveragename], 
                  enr.productdescription as [planname], 
                  enr.subgroupname as [locationname], 
                  '' as [departmentname], 
                  '' as [idcardvalue], 
                  enr.ctgkey as [alternateid], 
                  current_timestamp as [dmldate], 
                  system_user as [lastuser], 
                  concat(
                    ltrim(
                      rtrim(CTGKey)
                    ), 
                    '-', 
                    primarygroupid
                  ) as [sourcerecordid] 
                from 
                  (
                    select 
                      distinct groupid, 
                      primarygroupid, 
                      productcategorycode, 
                      familystructurecode as familystructurecode, 
                      en1.effectivedate, 
                      cancelleddate, 
                      [primarysubscriberid], 
                      en1.classplandescription as classplandescription, 
                      en1.ProductDescription as productdescription, 
                      en1.subgroupname as subgroupname, 
                      en1.ctgkey, 
                      memberkey 
                    from 
                      blindedclients_mdm.dbo.legacy_enrollment en1 
                      join (
                        select 
                          max(classplandescription) as classplandescription, 
                          max(subgroupname) as subgroupname, 
                          max(productdescription) as productdescription, 
                          concat(
                            ltrim(
                              rtrim(CTGKey)
                            ), 
                            '-', 
                            primarygroupid
                          ) as primaryKey, 
                          cast(
                            cast(
                              effectivedate as varchar(10)
                            ) as date
                          ) as effdate 
                        from 
                          blindedclients_mdm.dbo.legacy_enrollment 
                        where 
                          productcategorycode in ('m') 
                        group by 
                          concat(
                            ltrim(
                              rtrim(CTGKey)
                            ), 
                            '-', 
                            primarygroupid
                          ), 
                          cast(
                            cast(
                              effectivedate as varchar(10)
                            ) as date
                          )
                      ) en2 on concat(
                        ltrim(
                          rtrim(en1.CTGKey)
                        ), 
                        '-', 
                        en1.primarygroupid
                      ) = en2.primarykey 
                      and en1.classplandescription = en2.classplandescription 
                      and cast(
                        cast(
                          en1.effectivedate as varchar(10)
                        ) as date
                      ) = en2.effdate 
                      and en1.subgroupname = en2.subgroupname 
                      and en1.productdescription = en2.productdescription 
                    where 
                      productcategorycode in ('m')
                  ) as enr 
                  left join (
                    select 
                      max(memberid) as memberid, 
                      sourcerecordID, 
                      companyid 
                    from 
                      interasmdm_n.dbo.member 
                    group by 
                      SourceRecordID, 
                      companyid
                  ) as mem on concat(
                    ltrim(
                      rtrim(enr.CTGKey)
                    ), 
                    '-', 
                    enr.primarygroupid
                  ) = mem.sourcerecordid 
                  and mem.companyid in (3, 4, 6, 8, 13, 12, 15, 20, 25, 26, 27) 
                where 
                  enr.productcategorycode in ('m') 
                  and enr.groupid = '46996' 
                  and ctgkey = ''
              ) 
              select 
                * into 
              from 
                insert into [interasmdm_n].[dbo].[enrollment] (
                  [memberid], [coveragetypeid], [coveragetierid], 
                  [enrollmentstatusid], [effectivedate], 
                  [terminationdate], [coveragename], 
                  [planname], [locationname], [departmentname], 
                  [idcardvalue], [alternateid], [dmldate], 
                  [lastuser], [sourcerecordid]
                ) 
              select 
                distinct [memberid], 
                [coveragetypeid], 
                [coveragetierid], 
                [enrollmentstatusid], 
                [effectivedate], 
                [terminationdate], 
                [coveragename], 
                [planname], 
                [locationname], 
                [departmentname], 
                [idcardvalue], 
                [alternateid], 
                [dmldate], 
                [lastuser], 
                [sourcerecordid] 
              from 
              drop 
                table end GO 
              </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">
              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsmedicalclaiminsert] as begin 
              set 
                nocount on;
              if object_id(
                '#regencemedicalclaiminserttable ', 
                'u'
              ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct coalesce(
                    mem.memberid, 
                    case when clm.primy_grp_id_cd = '10012785' then -3 when clm.primy_grp_id_cd = '63000000' then -4 when clm.primy_grp_id_cd = '10007440' then -6 when clm.primy_grp_id_cd = '10015894' then -13 when clm.primy_grp_id_cd = '10002156' then -20 when clm.primy_grp_id_cd = '10017746' then -25 when left(clm.primy_grp_id_cd, 2) = '68' then -26 when clm.primy_grp_id_cd = '10016010' then -12 when clm.primy_grp_id_cd = '63000002' then -4 when clm.primy_grp_id_cd = '63000001' then -4 when clm.[PRIMY_GRP_ID_CD] = '10019108' then -30 end
                  ) as memberid, 
                  concat(
                    ltrim(
                      rtrim(clm.clm_id_cd)
                    ), 
                    '-', 
                    clm.proc_dt, 
                    '-', 
                    clm.PD_AMT, 
                    '-', 
                    coalesce(TO_CLAIM_ID, 'XX')
                  ) as claimheadernumber, 
                  ltrim(
                    rtrim(clm.cli_num_cd)
                  ) as claimlinenumber, 
                  coalesce(ben.benefitid, -1) as benefitid, 
                  coalesce(pos.placeofserviceid,-1) as placeofserviceid, 
                  coalesce(
                    pro2.providerid, prov.providerid, 
                    -1
                  ) as providerid, 
                  -1 as servicetypeid, 
                  cast(clm.svc_from_dt as date) as incurreddatestart, 
                  cast(clm.svc_to_dt as date) as incurreddateend, 
                  cast(clm.proc_dt as date) as paiddate, 
                  case when coalesce(admt_dt, '') = '0' then '' else coalesce(
                    cast(admt_dt as date), 
                    ''
                  ) end as admitdate, 
                  case when coalesce(dschrg_dt, '') = '0' then '' else coalesce(
                    cast(dschrg_dt as date), 
                    ''
                  ) end as dischargedate, 
                  prod_typ_cd networkcode, 
                  svcg_prov_in_ntwk_cd networkind, 
                  clm.diag_cd_1 as icd9_1, 
                  clm.diag_cd_2 as icd9_2, 
                  clm.diag_cd_3 as icd9_3, 
                  clm.diag_cd_4 as icd9_4, 
                  clm.diag_cd_5 as icd9_5, 
                  clm.rvnu_cd as revenuecode, 
                  clm.hcpcs_cpt_cd as procedurecode, 
                  clm.hcpcs_cpt_modr_1_txt as proceduremodifier, 
                  clm.clm_billg_typ_cd as billtype, 
                  clm.drg_id_cd as drg, 
                  cast(clm.billd_chrg_amt as float) as billedamount, 
                  cast(clm.prov_alwd_amt as float) as eligibleamount, 
                  cast(clm.pd_amt as float) as paidamount, 
                  cast(clm.ded_amt as float) as deductibleamount, 
                  cast(clm.copaymt_amt as float) as copayamount, 
                  cast(clm.coin_amt as float) as coinsuranceamount, 
                  cast(clm.cob_savgs_amt as float) as cobamount, 
                  cast(clm.oth_payr_covd_amt as float) as subrogationamount, 
                  cast(clm.its_surchrg_amt as float) + cast(clm.its_acc_fee_amt as float) as otheramount, 
                  0 as hraamount, 
                  cast(
                    cast(hosp_day_cnt as float) as int
                  ) as hospitaldaycount, 
                  '' as checknumber, 
                  current_timestamp as dmldate, 
                  '/uniquememberappended:' + concat(
                    ltrim(
                      rtrim(clm.primy_sub_id_cd)
                    ), 
                    '-', 
                    ltrim(
                      rtrim(clm.mbr_sfx_cd)
                    )
                  ) + '/claimkeycode:' + ltrim(
                    rtrim(clm.clm_id_cd)
                  ) + '/claimlinenumber:' + ltrim(
                    rtrim(clm.cli_num_cd)
                  ) as sourcerecordid, 
                  2 as carrierid, 
                  coalesce(dia1.diagnosiscodeid,-1) as diagnosiscodeid_1, 
                  coalesce(dia2.diagnosiscodeid,-1) as diagnosiscodeid_2, 
                  coalesce(dia3.diagnosiscodeid,-1) as diagnosiscodeid_3, 
                  coalesce(dia4.diagnosiscodeid,-1) as diagnosiscodeid_4, 
                  coalesce(dia5.diagnosiscodeid,-1) as diagnosiscodeid_5, 
                  coalesce(rev.revenuecodeid, -1) as revenuecodeid, 
                  coalesce(pro.procedurecodeid, -1) as procedurecodeid 
                from 
                  blindedclients_mdm.dbo.medical as clm 
                  left join (
                    select 
                      max(memberid) as memberid, 
                      sourcerecordid, 
                      companyid 
                    from 
                      interasmdm_n.dbo.member 
                    group by 
                      sourcerecordid, 
                      companyid
                  ) as mem on concat(
                    ltrim(
                      rtrim(clm.CURR_CTG_PERS_KEY_CD)
                    ), 
                    '-', 
                    clm.[PRIMY_GRP_ID_CD]
                  ) = mem.sourcerecordid 
                  and mem.companyid in (3, 4, 12, 13, 20, 25, 26, 27, 30) 
                  left join interasmdm_n.dbo.placeofservice as pos on coalesce(
                    ltrim(
                      rtrim(clm.pot_cd)
                    ), 
                    'zz'
                  ) = pos.placeofservicecode 
                  left join interasmdm_n.dbo.benefit as ben on coalesce(
                    ltrim(
                      rtrim(clm.svc_typ_cd)
                    ), 
                    'zz'
                  ) = ben.benefitcode 
                  and ben.carrierid = 2 
                  left join interasmdm_n.dbo.revenuecode as rev on clm.rvnu_cd = rev.revenuecode 
                  left join interasmdm_n.dbo.procedurecode as pro on clm.hcpcs_cpt_cd = pro.procedurecode 
                  left join (
                    select 
                      max(ProviderID) as ProviderID, 
                      Providernpi as providernpi, 
                      Providername as providername 
                    from 
                      interasmdm_n.dbo.provider 
                    where 
                      ProviderNPI is not null 
                      and providernpi = '-1' 
                      and providernpi = '' 
                    group by 
                      Providernpi, 
                      Providername
                  ) pro2 on coalesce(
                    ltrim(
                      rtrim(clm.[DELV_PROV_NPI_ID_CD])
                    ), 
                    'xxxxxxxxx'
                  ) = pro2.providernpi 
                  and coalesce(
                    ltrim(
                      rtrim(clm.delv_prov_name)
                    ), 
                    'zzzzzzzzz'
                  ) = pro2.providername 
                  left join (
                    select 
                      max(providerid) as providerid, 
                      providertaxid as providertaxid, 
                      providername 
                    from 
                      interasmdm_n.dbo.provider 
                    where 
                      providertaxid is not null 
                      and providertaxid = '-1' 
                      and providertaxid = '' 
                      and providername = '' 
                    group by 
                      providertaxid, 
                      providername
                  ) as prov on coalesce(
                    ltrim(
                      rtrim(clm.delv_prov_tax_id_cd)
                    ), 
                    'zzzzzzzzz'
                  ) = prov.providertaxid 
                  and coalesce(
                    ltrim(
                      rtrim(clm.delv_prov_name)
                    ), 
                    'zzzzzzzzz'
                  ) = prov.providername 
                  left join interasmdm_n.dbo.diagnosiscode as dia1 on clm.diag_cd_1 = dia1.diagnosiscode 
                  left join interasmdm_n.dbo.diagnosiscode as dia2 on clm.diag_cd_2 = dia2.diagnosiscode 
                  left join interasmdm_n.dbo.diagnosiscode as dia3 on clm.diag_cd_3 = dia3.diagnosiscode 
                  left join interasmdm_n.dbo.diagnosiscode as dia4 on clm.diag_cd_4 = dia4.diagnosiscode 
                  left join interasmdm_n.dbo.diagnosiscode as dia5 on clm.diag_cd_5 = dia5.diagnosiscode 
                  left join interasmdm_n.dbo.medicalclaim as mcl on concat(
                    ltrim(
                      rtrim(clm.clm_id_cd)
                    ), 
                    '-', 
                    clm.proc_dt, 
                    '-', 
                    clm.PD_AMT, 
                    '-', 
                    coalesce(clm.TO_CLAIM_ID, 'XX')
                  ) = mcl.claimheadernumber 
                  and ltrim(
                    rtrim(clm.cli_num_cd)
                  ) = mcl.claimlinenumber 
                  and mcl.carrierid = 2 
                  and mcl.DMLDate > '2016-04-27 14:55:24.760' 
                where 
                  mcl.medicalclaimid is null 
                  and clm.primy_grp_id_cd = '10007440'
              ) 
              select 
                * into 
              from 
                insert into interasmdm_n.dbo.medicalclaim (
                  memberid, claimheadernumber, claimlinenumber, 
                  benefitid, placeofserviceid, providerid, 
                  servicetypeid, incurreddatestart, 
                  incurreddateend, paiddate, admitdate, 
                  dischargedate, networkcode, networkind, 
                  icd9_1, icd9_2, icd9_3, icd9_4, icd9_5, 
                  revenuecode, procedurecode, proceduremodifier, 
                  billtype, drg, billedamount, eligibleamount, 
                  paidamount, deductibleamount, copayamount, 
                  coinsuranceamount, cobamount, subrogationamount, 
                  otheramount, hraamount, hospitaldaycount, 
                  checknumber, dmldate, sourcerecordid, 
                  carrierid, diagnosiscodeid_1, diagnosiscodeid_2, 
                  diagnosiscodeid_3, diagnosiscodeid_4, 
                  diagnosiscodeid_5, revenuecodeid, 
                  procedurecodeid
                ) 
              select 
                distinct * 
              from 
              drop 
                table end GO 
              



              </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">

              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsMedicalClaimInsert_legacy] as begin 
              set 
                nocount on;
              if object_id(
                '#regencemedicalclaiminserttable ', 
                'u'
              ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct coalesce(
                    mem.memberid, 
                    case when clm.groupid = '46736' then -3 when clm.groupid = '33927' then -4 when clm.groupid = '33928' then -4 when clm.groupid = '54705' then -4 when clm.groupid = '807441500' then -4 when clm.groupid = '33731' then -6 when cast(clm.groupid as int) = '48233001' then -6 when clm.groupid = '51313' then -8 when clm.groupid = '51525' then -13 when clm.groupid = '51584' then -12 when clm.groupid = '26447' then -20 when clm.groupid = '54146' then -25 when left(
                      cast(clm.primarygroupid as int), 
                      2
                    ) = '96' then -15 when left(
                      cast(clm.primarygroupid as int), 
                      2
                    ) = '68' then -26 end
                  ) as [memberid], 
                  ltrim(
                    rtrim(clm.claimkeycode)
                  ) as [claimheadernumber], 
                  ltrim(
                    rtrim(clm.claimlinenumber)
                  ) + ltrim(
                    rtrim(clm.sequencenumber)
                  ) as [claimlinenumber], 
                  coalesce(ben.benefitid,-1) as [benefitid], 
                  coalesce(pos.placeofserviceid,-1) as [placeofserviceid], 
                  coalesce(prov.providerid, -1) as [providerid], 
                  -1 as [servicetypeid], 
                  cast(
                    cast(
                      clm.servicefromdate as varchar(10)
                    ) as date
                  ) as [incurreddatestart], 
                  cast(
                    cast(
                      clm.servicetodate as varchar(10)
                    ) as date
                  ) as [incurreddateend], 
                  cast(
                    cast(
                      clm.paiddate as varchar(10)
                    ) as date
                  ) as [paiddate], 
                  '' as [admitdate], 
                  '' as [dischargedate], 
                  clm.currentnetworkcode as [networkcode], 
                  clm.networkproviderindicator as [networkind], 
                  clm.icd9_1 as [icd9_1], 
                  clm.icd9_2 as [icd9_2], 
                  clm.icd9_3 as [icd9_3], 
                  clm.icd9_4 as [icd9_4], 
                  clm.icd9_5 as [icd9_5], 
                  clm.revenuecode as [revenuecode], 
                  clm.procedurecode_1 as [procedurecode], 
                  clm.proceduremodifier1 as [proceduremodifier], 
                  clm.ub92typeofbill as [billtype], 
                  clm.drg as [drg], 
                  clm.chargeamount as [billedamount], 
                  clm.ucramount as [eligibleamount], 
                  clm.paidamount as [paidamount], 
                  clm.deductibleamount as [deductibleamount], 
                  clm.copaymentamount as [copayamount], 
                  clm.coinsuranceamount as [coinsuranceamount], 
                  clm.cobsavings as [cobamount], 
                  clm.otherpayercoveredamount as [subrogationamount], 
                  clm.itsaccessfee + clm.itssurchargeamount as [otheramount], 
                  0 as [hraamount], 
                  0 as [hospitaldaycount], 
                  '' as [checknumber], 
                  current_timestamp as [dmldate], 
                  '/CTGKey:' + clm.CTGKey + '/claimkeycode:' + clm.claimkeycode + '/claimlinenumber:' + clm.claimlinenumber + '/sequencenumber:' + sequencenumber as [sourcerecordid], 
                  2 as [carrierid], 
                  coalesce(dia1.diagnosiscodeid,-1) as [diagnosiscodeid_1], 
                  coalesce(dia2.diagnosiscodeid,-1) as [diagnosiscodeid_2], 
                  coalesce(dia3.diagnosiscodeid,-1) as [diagnosiscodeid_3], 
                  coalesce(dia4.diagnosiscodeid,-1) as [diagnosiscodeid_4], 
                  coalesce(dia5.diagnosiscodeid,-1) as [diagnosiscodeid_5], 
                  coalesce(rev.revenuecodeid, -1) as [revenuecodeid], 
                  coalesce(pro.procedurecodeid, -1) as [procedurecodeid] 
                from 
                  blindedclients_mdm.dbo.legacy_Medical as clm 
                  left join (
                    select 
                      max(memberid) as memberid, 
                      sourcerecordid, 
                      companyid 
                    from 
                      interasmdm_n.dbo.member 
                    group by 
                      sourcerecordid, 
                      companyid
                  ) as mem on concat(
                    ltrim(
                      rtrim(clm.CTGKey)
                    ), 
                    '-', 
                    clm.primarygroupid
                  ) = mem.sourcerecordid 
                  and mem.companyid in (3, 4, 6, 8, 12, 13, 15, 20, 25, 26) 
                  left join interasmdm_n.dbo.placeofservice as pos on clm.placeofservice = pos.placeofservicecode 
                  left join interasmdm_n.dbo.benefit as ben on clm.typeofservice = ben.benefitcode 
                  and ben.carrierid = 2 
                  left join interasmdm_n.dbo.revenuecode as rev on clm.revenuecode = rev.revenuecode 
                  left join interasmdm_n.dbo.procedurecode as pro on clm.procedurecode_1 = pro.procedurecode 
                  left join (
                    select 
                      distinct max(providerid) as providerid, 
                      providertaxid, 
                      providername 
                    from 
                      interasmdm_n.dbo.provider 
                    group by 
                      providertaxid, 
                      providername
                  ) as prov on clm.deliveringprovidertaxid = prov.providertaxid 
                  and clm.deliveringprovidername = prov.providername 
                  left join interasmdm_n.dbo.diagnosiscode as dia1 on clm.icd9_1 = dia1.diagnosiscode 
                  left join interasmdm_n.dbo.diagnosiscode as dia2 on clm.icd9_2 = dia2.diagnosiscode 
                  left join interasmdm_n.dbo.diagnosiscode as dia3 on clm.icd9_3 = dia3.diagnosiscode 
                  left join interasmdm_n.dbo.diagnosiscode as dia4 on clm.icd9_4 = dia4.diagnosiscode 
                  left join interasmdm_n.dbo.diagnosiscode as dia5 on clm.icd9_5 = dia5.diagnosiscode 
                  left join interasmdm_n.dbo.medicalclaim as mcl on ltrim(
                    rtrim(clm.claimkeycode)
                  ) = mcl.claimheadernumber 
                  and ltrim(
                    rtrim(clm.claimlinenumber)
                  ) + ltrim(
                    rtrim(clm.sequencenumber)
                  ) = mcl.claimlinenumber 
                  and mcl.carrierid = 2 
                where 
                  mcl.medicalclaimid is null 
                  and clm.groupid = '46996'
              ) 
              select 
                * into 
              from 
                insert into interasmdm_n.dbo.medicalclaim (
                  [memberid], [claimheadernumber], 
                  [claimlinenumber], [benefitid], 
                  [placeofserviceid], [providerid], 
                  [servicetypeid], [incurreddatestart], 
                  [incurreddateend], [paiddate], [admitdate], 
                  [dischargedate], [networkcode], 
                  [networkind], [icd9_1], [icd9_2], 
                  [icd9_3], [icd9_4], [icd9_5], [revenuecode], 
                  [procedurecode], [proceduremodifier], 
                  [billtype], [drg], [billedamount], 
                  [eligibleamount], [paidamount], 
                  [deductibleamount], [copayamount], 
                  [coinsuranceamount], [cobamount], 
                  [subrogationamount], [otheramount], 
                  [hraamount], [hospitaldaycount], 
                  [checknumber], [dmldate], [sourcerecordid], 
                  [carrierid], [diagnosiscodeid_1], 
                  [diagnosiscodeid_2], [diagnosiscodeid_3], 
                  [diagnosiscodeid_4], [diagnosiscodeid_5], 
                  [revenuecodeid], [procedurecodeid]
                ) 
              select 
                * 
              from 
              drop 
                table end GO 

              </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">



              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsMemberInsert] as begin 
              set 
                nocount on;
              if object_id(
                '#regencememberinserttable', 'u'
              ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct -1 as [universalmemberid], 
                  -1 as [familyid], 
                  case when enr.[PRIMY_GRP_ID_CD] = '10012785' then 3 when enr.[PRIMY_GRP_ID_CD] = '63000000' then 4 when enr.[PRIMY_GRP_ID_CD] = '10015894' then 13 when enr.[PRIMY_GRP_ID_CD] = '10002156' then 20 when enr.[PRIMY_GRP_ID_CD] = '10017746' then 25 when left(enr.[PRIMY_GRP_ID_CD], 2) = '68' then 26 when enr.[PRIMY_GRP_ID_CD] = '63000002' then 4 when enr.[PRIMY_GRP_ID_CD] = '63000001' then 4 when enr.[PRIMY_GRP_ID_CD] = '10019108' then 30 end as [companyid], 
                  coalesce(
                    ltrim(
                      rtrim(enr.MBR_FST_NAME)
                    ), 
                    ''
                  ) as [firstname], 
                  coalesce(
                    ltrim(
                      rtrim(enr.MBR_LST_NAME)
                    ), 
                    ''
                  ) as [lastname], 
                  coalesce(
                    ltrim(
                      rtrim(enr.MBR_MID_NAME)
                    ), 
                    ''
                  ) as [middleinitial], 
                  coalesce(
                    ltrim(
                      rtrim(enr.[PRIMY_MBR_ID_CD])
                    ), 
                    ''
                  ) as [ssn], 
                  cast(
                    cast(
                      enr.MBR_DOB_DT_KEY as varchar(10)
                    ) as date
                  ) as [dob], 
                  case when enr.MBR_GNDR_CD = 'm' then 0 else 1 end as [gender], 
                  case [MBR_RELSHP_CD] when 'm' then 1 when 'h' then 2 when 'w' then 2 when 'd' then 4 when 's' then 4 else 4 end as [relationshipid], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_ADDR_LN_1_TXT)
                    ), 
                    ''
                  ) as [addressline1], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_ADDR_LN_2_TXT)
                    ), 
                    ''
                  ) as [addressline2], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_CITY_NAME)
                    ), 
                    ''
                  ) as [city], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_ST_CD)
                    ), 
                    ''
                  ) as [state], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_CNTCT_POSTL_CD)
                    ), 
                    ''
                  ) as [zip], 
                  '' as [doh], 
                  coalesce(
                    ltrim(
                      rtrim(enr.MBR_PH_NUM_TXT)
                    ), 
                    ''
                  ) as [phone], 
                  concat(
                    ltrim(
                      rtrim(CURR_CTG_PERS_KEY_CD)
                    ), 
                    '-', 
                    enr.[PRIMY_GRP_ID_CD]
                  ) as [sourcerecordid], 
                  coalesce(
                    ltrim(
                      rtrim(primy_sub_id_cd)
                    ), 
                    ''
                  ) as eessn 
                from 
                  blindedclients_mdm.dbo.enrollment enr 
                  join (
                    select 
                      concat(
                        ltrim(
                          rtrim(CURR_CTG_PERS_KEY_CD)
                        ), 
                        '-', 
                        [PRIMY_GRP_ID_CD]
                      ) as submemberkey, 
                      max(
                        cast([CDM_REC_CNCL_DT_KEY] as date)
                      ) as lastrecord 
                    from 
                      blindedclients_mdm.dbo.enrollment 
                    group by 
                      concat(
                        ltrim(
                          rtrim(CURR_CTG_PERS_KEY_CD)
                        ), 
                        '-', 
                        [PRIMY_GRP_ID_CD]
                      )
                  ) en1 on concat(
                    ltrim(
                      rtrim(CURR_CTG_PERS_KEY_CD)
                    ), 
                    '-', 
                    enr.[PRIMY_GRP_ID_CD]
                  ) = en1.submemberkey 
                  and cast(
                    enr.[CDM_REC_CNCL_DT_KEY] as date
                  ) = en1.lastrecord 
                  left join interasmdm_n.dbo.member as mem on concat(
                    ltrim(
                      rtrim(CURR_CTG_PERS_KEY_CD)
                    ), 
                    '-', 
                    enr.[PRIMY_GRP_ID_CD]
                  ) = mem.sourcerecordid 
                  and mem.companyid in (3, 4, 8, 12, 13, 15, 20, 25, 26, 30) 
                where 
                  mem.memberid is null 
                  and enr.[PRIMY_GRP_ID_CD] = '10007440'
              ) 
              select 
                * into 
              from 
                insert into [interasmdm_n].[dbo].[member] (
                  [universalmemberid], [familyid], 
                  [companyid], [firstname], [lastname], 
                  [middleinitial], [ssn], [dob], [gender], 
                  [relationshipid], [addressline1], 
                  [addressline2], [city], [state], 
                  [zip], [doh], [phone], [sourcerecordid]
                ) 
              select 
                [universalmemberid], 
                [familyid], 
                [companyid], 
                [firstname], 
                [lastname], 
                [middleinitial], 
                [ssn], 
                cast([dob] as date), 
                [gender], 
                [relationshipid], 
                [addressline1], 
                [addressline2], 
                [city], 
                [state], 
                [zip], 
                cast([doh] as date), 
                [phone], 
                [sourcerecordid] 
              from 
              drop 
                table end GO 

              </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">



              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsMemberInsert_legacy] as begin 
              set 
                nocount on;
              if object_id(
                '#regencememberinserttable', 'u'
              ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct -1 as [universalmemberid], 
                  -1 as [familyid], 
                  case when enr.groupid = '46736' then 3 when enr.groupid = '33927' then 4 when enr.groupid = '33928' then 4 when enr.groupid = '54705' then 4 when enr.groupid = '33731' then 6 when enr.groupid = '51313' then 8 when enr.groupid = '51525' then 13 when enr.groupid = '51584' then 12 when enr.groupid = '26447' then 20 when enr.groupid = '54146' then 25 when left(enr.primarygroupid, 2) = '96' then 15 when left(enr.primarygroupid, 2) = '68' then 26 end as [companyid], 
                  coalesce(
                    ltrim(
                      rtrim(enr.firstname)
                    ), 
                    ''
                  ) as [firstname], 
                  coalesce(
                    ltrim(
                      rtrim(enr.lastname)
                    ), 
                    ''
                  ) as [lastname], 
                  coalesce(
                    ltrim(
                      rtrim(enr.middlename)
                    ), 
                    ''
                  ) as [middleinitial], 
                  coalesce(
                    ltrim(
                      rtrim(primarymemberid)
                    ), 
                    ''
                  ) as [ssn], 
                  cast(
                    enr.dob as varchar(10)
                  ) as [dob], 
                  case when enr.gender = 'm' then 0 else 1 end as [gender], 
                  case relationshipcode when 'm' then 1 when '1' then 2 when '2' then 2 when '10' then 2 when '4' then 2 when '6' then 2 when '7' then 2 when 'h' then 2 when 'o' then 2 when 'w' then 2 when '3' then 4 when '5' then 4 when '8' then 4 when '9' then 4 when 'd' then 4 when 's' then 4 else 6 end as [relationshipid], 
                  coalesce(
                    ltrim(
                      rtrim(enr.addressline1)
                    ), 
                    ''
                  ) as [addressline1], 
                  coalesce(
                    ltrim(
                      rtrim(enr.addressline2)
                    ), 
                    ''
                  ) as [addressline2], 
                  coalesce(
                    ltrim(
                      rtrim(enr.city)
                    ), 
                    ''
                  ) as [city], 
                  coalesce(
                    ltrim(
                      rtrim(enr.[state])
                    ), 
                    ''
                  ) as [state], 
                  coalesce(
                    ltrim(
                      rtrim(enr.zipcode)
                    ), 
                    ''
                  ) as [zip], 
                  '' as [doh], 
                  '' as [email], 
                  coalesce(
                    ltrim(
                      rtrim(enr.phone)
                    ), 
                    ''
                  ) as [phone], 
                  concat(
                    ltrim(
                      rtrim(enr.CTGKey)
                    ), 
                    '-', 
                    enr.primarygroupid
                  ) as [sourcerecordid] 
                from 
                  blindedclients_mdm.dbo.legacy_Enrollment enr 
                  join (
                    select 
                      concat(
                        ltrim(
                          rtrim(CTGKey)
                        ), 
                        '-', 
                        primarygroupid
                      ) as submemberkey, 
                      max(
                        cast(
                          cast(
                            cancelleddate as varchar(12)
                          ) as date
                        )
                      ) as lastrecord 
                    from 
                      blindedclients_mdm.dbo.legacy_Enrollment 
                    group by 
                      concat(
                        ltrim(
                          rtrim(CTGKey)
                        ), 
                        '-', 
                        primarygroupid
                      )
                  ) en1 on concat(
                    ltrim(
                      rtrim(enr.CTGKey)
                    ), 
                    '-', 
                    enr.primarygroupid
                  ) = en1.submemberkey 
                  and cast(
                    cast(
                      cancelleddate as varchar(12)
                    ) as date
                  ) = en1.lastrecord 
                  left join (
                    select 
                      max(memberid) as memberid, 
                      companyid, 
                      ltrim(
                        rtrim(sourcerecordID)
                      ) as sourcerecordid 
                    from 
                      interasmdm_n.dbo.member 
                    group by 
                      ltrim(
                        rtrim(sourcerecordID)
                      ), 
                      companyid
                  ) as mem on concat(
                    ltrim(
                      rtrim(enr.CTGKey)
                    ), 
                    '-', 
                    enr.primarygroupid
                  ) = mem.sourcerecordid 
                where 
                  mem.memberid is null 
                  and enr.groupid = '46996' 
                  and productcategorycode = 'm' 
                  and ctgkey = ''
              ) 
              select 
                * into 
              from 
                insert into [interasmdm_n].[dbo].[member] (
                  [universalmemberid], [familyid], 
                  [companyid], [firstname], [lastname], 
                  [middleinitial], [ssn], [dob], [gender], 
                  [relationshipid], [addressline1], 
                  [addressline2], [city], [state], 
                  [zip], [doh], [email], [phone], [sourcerecordid]
                ) 
              select 
                [universalmemberid], 
                [familyid], 
                [companyid], 
                [firstname], 
                [lastname], 
                [middleinitial], 
                [ssn], 
                cast([dob] as date), 
                [gender], 
                [relationshipid], 
                [addressline1], 
                [addressline2], 
                [city], 
                [state], 
                [zip], 
                cast([doh] as date), 
                [email], 
                [phone], 
                [sourcerecordid] 
              from 
              drop 
                table end GO 
              </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">



              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE PROCEDURE [dbo].[blindedclientsmemberupdate] AS BEGIN if object_id(
                  '#regencememberupdatetable', 'u'
                ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct -1 as [universalmemberid], 
                  -1 as [familyid], 
                  case when enr.[PRIMY_GRP_ID_CD] = '10012785' then 3 when enr.[PRIMY_GRP_ID_CD] = '63000000' then 4 when enr.[PRIMY_GRP_ID_CD] = '10015894' then 13 when enr.[PRIMY_GRP_ID_CD] = '10002156' then 20 when enr.[PRIMY_GRP_ID_CD] = '10017746' then 25 when left(enr.[PRIMY_GRP_ID_CD], 2) = '68' then 26 when enr.[PRIMY_GRP_ID_CD] = '63000002' then 4 when enr.[PRIMY_GRP_ID_CD] = '63000001' then 4 when enr.[PRIMY_GRP_ID_CD] = '10019108' then 30 end as [companyid], 
                  coalesce(
                    ltrim(
                      rtrim(enr.MBR_FST_NAME)
                    ), 
                    ''
                  ) as [firstname], 
                  coalesce(
                    ltrim(
                      rtrim(enr.MBR_LST_NAME)
                    ), 
                    ''
                  ) as [lastname], 
                  coalesce(
                    ltrim(
                      rtrim(enr.MBR_MID_NAME)
                    ), 
                    ''
                  ) as [middleinitial], 
                  coalesce(
                    ltrim(
                      rtrim(enr.[PRIMY_MBR_ID_CD])
                    ), 
                    ''
                  ) as [ssn], 
                  cast(
                    cast(
                      enr.MBR_DOB_DT_KEY as varchar(10)
                    ) as date
                  ) as [dob], 
                  case when enr.MBR_GNDR_CD = 'm' then 0 else 1 end as [gender], 
                  case [MBR_RELSHP_CD] when 'm' then 1 when 'h' then 2 when 'w' then 2 when 'd' then 4 when 's' then 4 else 4 end as [relationshipid], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_ADDR_LN_1_TXT)
                    ), 
                    ''
                  ) as [addressline1], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_ADDR_LN_2_TXT)
                    ), 
                    ''
                  ) as [addressline2], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_CITY_NAME)
                    ), 
                    ''
                  ) as [city], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_ST_CD)
                    ), 
                    ''
                  ) as [state], 
                  coalesce(
                    ltrim(
                      rtrim(enr.SUB_CNTCT_POSTL_CD)
                    ), 
                    ''
                  ) as [zip], 
                  '' as [doh], 
                  coalesce(
                    ltrim(
                      rtrim(enr.MBR_PH_NUM_TXT)
                    ), 
                    ''
                  ) as [phone], 
                  concat(
                    ltrim(
                      rtrim(CURR_CTG_PERS_KEY_CD)
                    ), 
                    '-', 
                    enr.[PRIMY_GRP_ID_CD]
                  ) as [sourcerecordid], 
                  coalesce(
                    ltrim(
                      rtrim(primy_sub_id_cd)
                    ), 
                    ''
                  ) as eessn, 
                  mem.memberid 
                from 
                  blindedclients_mdm.dbo.enrollment enr 
                  join (
                    select 
                      concat(
                        ltrim(
                          rtrim(CURR_CTG_PERS_KEY_CD)
                        ), 
                        '-', 
                        [PRIMY_GRP_ID_CD]
                      ) as submemberkey, 
                      max(
                        cast([CDM_REC_CNCL_DT_KEY] as date)
                      ) as lastrecord 
                    from 
                      blindedclients_mdm.dbo.enrollment 
                    group by 
                      concat(
                        ltrim(
                          rtrim(CURR_CTG_PERS_KEY_CD)
                        ), 
                        '-', 
                        [PRIMY_GRP_ID_CD]
                      )
                  ) en1 on concat(
                    ltrim(
                      rtrim(CURR_CTG_PERS_KEY_CD)
                    ), 
                    '-', 
                    enr.[PRIMY_GRP_ID_CD]
                  ) = en1.submemberkey 
                  and cast(
                    enr.[CDM_REC_CNCL_DT_KEY] as date
                  ) = en1.lastrecord 
                  left join (
                    select 
                      max(memberid) as memberid, 
                      companyid, 
                      sourcerecordid 
                    from 
                      interasmdm_n.dbo.member mem 
                    where 
                      mem.companyid in (3, 4, 8, 12, 13, 15, 20, 25, 26, 30) 
                    group by 
                      companyid, 
                      sourcerecordid
                  ) as mem on submemberkey = mem.sourcerecordid 
                  and mem.companyid in (3, 4, 8, 12, 13, 15, 20, 25, 26, 30) 
                where 
                  mem.memberid is not null 
                  and enr.[PRIMY_GRP_ID_CD] = '10007440'
              ) 
              select 
                * into 
              from 
              update 
                interasmdm_n.dbo.member 
              set 
                [universalmemberid] = mem.[universalmemberid], 
                [familyid] = mem.[familyid], 
                [companyid] = mem.[companyid], 
                [firstname] = mem.[firstname], 
                [lastname] = mem.[lastname], 
                [middleinitial] = mem.[middleinitial], 
                [ssn] = mem.[ssn], 
                [dob] = cast(mem.[dob] as date), 
                [gender] = cast(
                  mem.[gender] as varchar(10)
                ), 
                [relationshipid] = mem.[relationshipid], 
                [addressline1] = mem.[addressline1], 
                [addressline2] = mem.[addressline2], 
                [city] = mem.[city], 
                [state] = mem.[state], 
                [zip] = mem.[zip], 
                [doh] = mem.[doh], 
                [phone] = mem.[phone], 
                [dmldate] = current_timestamp, 
                [sourcerecordid] = mem.[sourcerecordid], 
                eessn = mem.eessn 
              from 
                join interasmdm_n.dbo.member as dest on mem.memberid = dest.memberid 
              where 
                dest.[sourcerecordid] = mem.[sourcerecordid] 
              drop 
                table END GO 
              </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">



              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsMemberUpdate_legacy] as begin 
              set 
                nocount on;
              if object_id(
                '#regencememberupdatetable', 'u'
              ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct -1 as [universalmemberid], 
                  -1 as [familyid], 
                  case when enr.groupid = '46736' then 3 when enr.groupid = '33927' then 4 when enr.groupid = '33928' then 4 when enr.groupid = '54705' then 4 when enr.groupid = '33731' then 6 when enr.groupid = '51313' then 8 when enr.groupid = '51525' then 13 when enr.groupid = '51584' then 12 when enr.groupid = '26447' then 20 when enr.groupid = '54146' then 25 when left(enr.primarygroupid, 2) = '96' then 15 when left(enr.primarygroupid, 2) = '68' then 26 end as [companyid], 
                  coalesce(
                    ltrim(
                      rtrim(enr.firstname)
                    ), 
                    ''
                  ) as [firstname], 
                  coalesce(
                    ltrim(
                      rtrim(enr.lastname)
                    ), 
                    ''
                  ) as [lastname], 
                  coalesce(
                    ltrim(
                      rtrim(enr.middlename)
                    ), 
                    ''
                  ) as [middleinitial], 
                  coalesce(
                    ltrim(
                      rtrim(primarymemberid)
                    ), 
                    ''
                  ) as [ssn], 
                  cast(
                    enr.dob as varchar(10)
                  ) as [dob], 
                  case when enr.gender = 'm' then 0 else 1 end as [gender], 
                  case relationshipcode when 'm' then 1 when '1' then 2 when '2' then 2 when '10' then 2 when '4' then 2 when '6' then 2 when '7' then 2 when 'h' then 2 when 'o' then 2 when 'w' then 2 when '3' then 4 when '5' then 4 when '8' then 4 when '9' then 4 when 'd' then 4 when 's' then 4 else 6 end as [relationshipid], 
                  coalesce(
                    ltrim(
                      rtrim(enr.addressline1)
                    ), 
                    ''
                  ) as [addressline1], 
                  coalesce(
                    ltrim(
                      rtrim(enr.addressline2)
                    ), 
                    ''
                  ) as [addressline2], 
                  coalesce(
                    ltrim(
                      rtrim(enr.city)
                    ), 
                    ''
                  ) as [city], 
                  coalesce(
                    ltrim(
                      rtrim(enr.[state])
                    ), 
                    ''
                  ) as [state], 
                  coalesce(
                    ltrim(
                      rtrim(enr.zipcode)
                    ), 
                    ''
                  ) as [zip], 
                  '' as [doh], 
                  '' as [email], 
                  coalesce(
                    ltrim(
                      rtrim(enr.phone)
                    ), 
                    ''
                  ) as [phone], 
                  concat(
                    ltrim(
                      rtrim(enr.CTGKey)
                    ), 
                    '-', 
                    enr.primarygroupid
                  ) as [sourcerecordid] 
                from 
                  blindedclients_mdm.dbo.legacy_Enrollment enr 
                  join (
                    select 
                      concat(
                        ltrim(
                          rtrim(CTGKey)
                        ), 
                        '-', 
                        primarygroupid
                      ) as submemberkey, 
                      max(
                        cast(
                          cast(
                            cancelleddate as varchar(12)
                          ) as date
                        )
                      ) as lastrecord 
                    from 
                      blindedclients_mdm.dbo.legacy_Enrollment 
                    group by 
                      concat(
                        ltrim(
                          rtrim(CTGKey)
                        ), 
                        '-', 
                        primarygroupid
                      )
                  ) en1 on concat(
                    ltrim(
                      rtrim(enr.CTGKey)
                    ), 
                    '-', 
                    enr.primarygroupid
                  ) = en1.submemberkey 
                  and cast(
                    cast(
                      cancelleddate as varchar(12)
                    ) as date
                  ) = en1.lastrecord 
                  left join (
                    select 
                      max(memberid) as memberid, 
                      companyid, 
                      ltrim(
                        rtrim(sourcerecordID)
                      ) as sourcerecordid 
                    from 
                      interasmdm_n.dbo.member 
                    group by 
                      ltrim(
                        rtrim(sourcerecordID)
                      ), 
                      companyid
                  ) as mem on concat(
                    ltrim(
                      rtrim(enr.CTGKey)
                    ), 
                    '-', 
                    enr.primarygroupid
                  ) = mem.sourcerecordid 
                where 
                  mem.memberid is not null 
                  and enr.groupid = '46996' 
                  and productcategorycode = 'm'
              ) 
              select 
                * into 
              from 
              update 
                interasmdm_n.dbo.member 
              set 
                [universalmemberid] = mem.[universalmemberid], 
                [familyid] = mem.[familyid], 
                [companyid] = mem.[companyid], 
                [firstname] = mem.[firstname], 
                [lastname] = mem.[lastname], 
                [middleinitial] = mem.[middleinitial], 
                [ssn] = mem.[ssn], 
                [dob] = cast(mem.[dob] as date), 
                [gender] = cast(
                  mem.[gender] as varchar(10)
                ), 
                [relationshipid] = mem.[relationshipid], 
                [addressline1] = mem.[addressline1], 
                [addressline2] = mem.[addressline2], 
                [city] = mem.[city], 
                [state] = mem.[state], 
                [zip] = mem.[zip], 
                [doh] = mem.[doh], 
                [email] = mem.[email], 
                [phone] = mem.[phone], 
                [dmldate] = current_timestamp, 
                [sourcerecordid] = mem.[sourcerecordid] 
              from 
              where 
                interasmdm_n.dbo.member.[sourcerecordid] = mem.[sourcerecordid] 
              drop 
                table end GO 


              </code></pre>
            </div>
            <div class="Pre-2016-ICD9">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">




              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsProviderInsert] as begin 
              set 
                nocount on;
              if object_id(
                '#regenceproviderinserttable', 'u'
              ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct rtrim(
                    ltrim(med.[delv_prov_name])
                  ) as [providername], 
                  -1 as [providertypeid], 
                  -1 as [providerspecialtyid], 
                  rtrim(
                    ltrim(med.[delv_prov_tax_id_cd])
                  ) as [providertaxid], 
                  coalesce(
                    rtrim(
                      ltrim(med.[delv_prov_npi_id_cd])
                    ), 
                    ''
                  ) as [providernpi], 
                  current_timestamp as [dmldate], 
                  system_user as [lastuser] 
                from 
                  blindedclients_mdm.dbo.medical as med 
                  left join interasmdm_n.dbo.provider as pro on med.[delv_prov_tax_id_cd] = pro.providertaxid 
                  and med.[delv_prov_name] = pro.providername 
                where 
                  pro.providerid is null 
                  and med.DELV_PROV_NAME is not null
              ) 
              select 
                * into 
              from 
                insert into interasmdm_n.[dbo].[provider] (
                  [providername], [providertypeid], 
                  [providerspecialtyid], [providertaxid], 
                  [providernpi], [dmldate], [lastuser]
                ) 
              select 
                [providername], 
                [providertypeid], 
                [providerspecialtyid], 
                [providertaxid], 
                [providernpi], 
                [dmldate], 
                [lastuser] 
              from 
              drop 
                table end GO 



              </code></pre>
            </div>
            <div class="Prescription-Claim-Insert Stored-Procedure">
                <h2 title="ETL Module">Extract Transform Load Schema</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">


              SET 
                ANSI_NULLS ON GO 
              SET 
                QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsProviderInsert_legacy] as begin 
              set 
                nocount on;
              if object_id(
                '#regenceproviderinserttable', 'u'
              ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct rtrim(
                    ltrim(med.deliveringprovidername)
                  ) as [providername], 
                  -1 as [providertypeid], 
                  -1 as [providerspecialtyid], 
                  rtrim(
                    ltrim(med.deliveringprovidertaxid)
                  ) as [providertaxid], 
                  coalesce(
                    rtrim(
                      ltrim(med.providernpi)
                    ), 
                    ''
                  ) as [providernpi], 
                  current_timestamp as [dmldate], 
                  system_user as [lastuser] 
                from 
                  blindedclients_mdm.dbo.medical as med 
                  left join interasmdm_n.dbo.provider as pro on med.deliveringprovidertaxid = pro.providertaxid 
                  and med.deliveringprovidername = pro.providername 
                where 
                  pro.providerid is null
              ) 
              select 
                * into 
              from 
                insert into interasmdm_n.[dbo].[provider] (
                  [providername], [providertypeid], 
                  [providerspecialtyid], [providertaxid], 
                  [providernpi], [dmldate], [lastuser]
                ) 
              select 
                [providername], 
                [providertypeid], 
                [providerspecialtyid], 
                [providertaxid], 
                [providernpi], 
                [dmldate], 
                [lastuser] 
              from 
                declare @total as int 
              set 
                @total = (
                  select 
                    count(*) 
                  from 
                    execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    3 execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    4 execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    6 execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    8 execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    12 execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    13 execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    15 execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    20 execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    25 execute etlaudit.dbo.audittransaction 3, 
                    1256, 
                    1082, 
                    @total, 
                    26 
                  drop 
                    table end GO 


                  </code></pre>
            </div>
            <div class="Post-2016-ICD10 Automation Schema Prescription-Claim-Insert Stored-Procedure">
                <h2 title="ETL Module">Extract Transform Load Prescription-Claim-Insert Stored-Procedure</h2>



                <!-- <h2>SQL (Structured Query Language)</h2> -->
                <pre><code class="sql">



                  SET 
                    ANSI_NULLS ON GO 
                  SET 
                    QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[blindedclientsRXClaimInsert] as begin 
                  set 
                    nocount on;
              insert into interasmdm_n.dbo.ndc (ndcnumber, ndcname) 
              select 
                distinct ltrim(
                  rtrim(rx1.[RX_NDC_ID_CD])
                ), 
                ltrim(
                  rtrim(rx1.drugname)
                ) 
              from 
                (
                  select 
                    [RX_NDC_ID_CD], 
                    max(DRUG_NAME) as drugname 
                  from 
                    blindedclients_mdm.dbo.rx 
                  where 
                    [RX_NDC_ID_CD] is not null 
                  group by 
                    [RX_NDC_ID_CD]
                ) as rx1 
                left join interasmdm_n.dbo.ndc as rx2 on ltrim(
                  rtrim(rx1.[RX_NDC_ID_CD])
                ) = rx2.ndcnumber 
              where 
                rx2.ndcnumber is null if object_id(
                  '#regencerxclaiminserttable', 'u'
                ) is not null begin 
              drop 
                table end;
              with as (
                select 
                  distinct coalesce(
                    mem.memberid, 
                    case when rx.primy_grp_id_cd = '10012785' then -3 when rx.primy_grp_id_cd = '63000000' then -4 when rx.primy_grp_id_cd = '10007440' then -6 when rx.primy_grp_id_cd = '10015894' then -13 when rx.primy_grp_id_cd = '10002156' then -20 when rx.primy_grp_id_cd = '10017746' then -25 when rx.primy_grp_id_cd = '10016010' then -12 when left(rx.primy_grp_id_cd, 2) = '68' then -26 when rx.primy_grp_id_cd = '63000002' then -27 when rx.primy_grp_id_cd = '63000001' then -27 when rx.[PRIMY_GRP_ID_CD] = '10019108' then -30 end
                  ) as [memberid], 
                  concat(
                    ltrim(
                      rtrim(rx.[CLM_ID_CD])
                    ), 
                    '-', 
                    ltrim(
                      rtrim(rx.[CLI_NUM_CD])
                    ), 
                    '-', 
                    rx.PD_AMT, 
                    '-', 
                    rx.BILLD_CHRG_AMT
                  ) as [rxclaimnumber], 
                  '' as [writtendate], 
                  case when rx.[CDM_RX_FILL_DT_KEY] = 0 then '' else cast(
                    cast(
                      rx.[CDM_RX_FILL_DT_KEY] as varchar(10)
                    ) as date
                  ) end as [filleddate], 
                  case when rx.[PROC_DT] = 0 then '' else cast(
                    cast(
                      rx.[PROC_DT] as varchar(10)
                    ) as date
                  ) end as [paiddate], 
                  coalesce(ndc.ndcid,-1) as [ndcid], 
                  -1 as [pharmacyid], 
                  -1 as [providerid], 
                  case when cast(
                    cast(rx.[NEW_RFILL_CNT] as int) as varchar(15)
                  ) = 0 then 0 else 1 end as [newrefillcode], 
                  cast(
                    rx.[RX_DAW_CD] as varchar(15)
                  ) as [dawcode], 
                  null as [compoundflag], 
                  null as [formularyflag], 
                  null as [rxtier], 
                  -1 as [drugtypeid], 
                  cast(rx.[RX_QTY_PD_CNT] as int) as [metricquantity], 
                  case when cast(rx.[BILLD_CHRG_AMT] as float) = 0 then cast(
                    replace(rx.[RX_DAYS_SPLY_CNT], '-', '') as int
                  )*-1 else cast(rx.[RX_DAYS_SPLY_CNT] as int) end as [daysupply], 
                  cast(rx.[BILLD_CHRG_AMT] as float) as [billedamount], 
                  cast(rx.[PD_AMT] as float) as [paidamount], 
                  cast(rx.[RX_COPAY_AMT] as float) as [copayamount], 
                  cast(rx.[RX_APLD_DED_AMT] as float) as [deductibleamount], 
                  coalesce(
                    cast(rx.[COIN_AMT] as float), 
                    ''
                  ) as [coinsuranceamount], 
                  cast(
                    rx.[RX_INGRDT_COST_PD_AMT] as float
                  ) as [ingredientcost], 
                  cast(
                    rx.[RX_DSPNSG_FEE_PD_AMT] as float
                  ) as [dispensingfee], 
                  cast(
                    rx.[RX_SALES_TAX_PD_AMT] as float
                  ) as [taxamount], 
                  0 as [hraamount], 
                  concat(
                    ltrim(
                      rtrim(rx.[CLM_ID_CD])
                    ), 
                    '-', 
                    ltrim(
                      rtrim(rx.[CLI_NUM_CD])
                    ), 
                    '-', 
                    rx.PD_AMT, 
                    '-', 
                    rx.BILLD_CHRG_AMT
                  ) as [sourcerecordid] 
                from 
                  blindedclients_mdm.dbo.rx as rx 
                  left join interasmdm_n.dbo.ndc ndc on coalesce(
                    ltrim(
                      rtrim(rx.[RX_NDC_ID_CD])
                    ), 
                    'QQQQQ'
                  ) = ndc.ndcnumber 
                  left join (
                    select 
                      max(memberid) as memberid, 
                      sourcerecordid, 
                      companyid 
                    from 
                      interasmdm_n.dbo.member 
                    group by 
                      sourcerecordid, 
                      companyid
                  ) as mem on concat(
                    ltrim(
                      rtrim(rx.CURR_CTG_PERS_KEY_CD)
                    ), 
                    '-', 
                    rx.[PRIMY_GRP_ID_CD]
                  ) = mem.sourcerecordid 
                  and mem.companyid in (3, 4, 12, 13, 20, 25, 26, 27, 30) 
                  left join interasmdm_n.dbo.rxclaim rxc on concat(
                    ltrim(
                      rtrim(rx.[CLM_ID_CD])
                    ), 
                    '-', 
                    ltrim(
                      rtrim(rx.[CLI_NUM_CD])
                    ), 
                    '-', 
                    rx.PD_AMT, 
                    '-', 
                    rx.BILLD_CHRG_AMT
                  ) = rxc.[rxclaimnumber] 
                  and rxc.sourcerecordid is not null 
                where 
                  rxc.rxclaimid is nulL
              ) 
              select 
                * into 
              from 
                insert into interasmdm_n.[dbo].[rxclaim] (
                  [memberid], [rxclaimnumber], [writtendate], 
                  [filleddate], [paiddate], [ndcid], 
                  [pharmacyid], [providerid], [newrefillcode], 
                  [dawcode], [compoundflag], [formularyflag], 
                  [rxtier], [drugtypeid], [metricquantity], 
                  [daysupply], [billedamount], [paidamount], 
                  [copayamount], [deductibleamount], 
                  [coinsuranceamount], [ingredientcost], 
                  [dispensingfee], [taxamount], [hraamount], 
                  [sourcerecordid]
                ) 
              select 
                * 
              from 
              drop 
                table end GO
                   </code></pre>
            </div>
        </div>


        <script src="JS/HIGHLIGH.JS"></script>
        <script src="JS/JQUERY_2.JS"></script>
        <script src="JS/PERFECT_.JS"></script>
        <script src="JS/DEMO.JS"></script>



</body>

<!-- Mirrored from highlightjs.org/static/demo/ by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 20 Nov 2019 12:52:10 GMT -->

</html>